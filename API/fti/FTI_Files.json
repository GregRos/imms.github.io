["Imms API - Redirect\u0000index.html\u000018","Imms API - Search\u0000search.html\u000011","ImmVector(T) Fields\u0000html/Fields_T_Imms_ImmVector_1.htm\u000062","ImmVector(T).MaxCapacity Field\u0000html/F_Imms_ImmVector_1_MaxCapacity.htm\u000081","Imms API\u0000html/Imms_Root.htm\u000031","AbstractIterable(TElem, TIterable, TBuilder) Methods\u0000html/Methods_T_Imms_Abstract_AbstractIterable_3.htm\u0000532","AbstractMap(TKey, TValue, TMap) Methods\u0000html/Methods_T_Imms_Abstract_AbstractMap_3.htm\u00001351","AbstractSequential(TElem, TList) Methods\u0000html/Methods_T_Imms_Abstract_AbstractSequential_2.htm\u00001150","AbstractSet(TElem, TSet) Methods\u0000html/Methods_T_Imms_Abstract_AbstractSet_2.htm\u0000987","IAnyIterableBuilder(TElem) Methods\u0000html/Methods_T_Imms_Abstract_IAnyIterableBuilder_1.htm\u000071","IAnyMapBuilder(TKey, TValue) Methods\u0000html/Methods_T_Imms_Abstract_IAnyMapBuilder_2.htm\u0000138","IAnySetBuilder(TElem) Methods\u0000html/Methods_T_Imms_Abstract_IAnySetBuilder_1.htm\u0000121","IIterableBuilder(TElem, TResult) Methods\u0000html/Methods_T_Imms_Abstract_IIterableBuilder_2.htm\u0000126","IMapBuilder(TKey, TValue, TMap) Methods\u0000html/Methods_T_Imms_Abstract_IMapBuilder_3.htm\u0000207","ISequentialBuilder(TElem, TList) Methods\u0000html/Methods_T_Imms_Abstract_ISequentialBuilder_2.htm\u0000136","ISetBuilder(TElem, TSet) Methods\u0000html/Methods_T_Imms_Abstract_ISetBuilder_2.htm\u0000186","ImmList Methods\u0000html/Methods_T_Imms_ImmList.htm\u000059","ImmList(T) Methods\u0000html/Methods_T_Imms_ImmList_1.htm\u00002087","ImmMap Methods\u0000html/Methods_T_Imms_ImmMap.htm\u0000165","ImmMap(TKey, TValue) Methods\u0000html/Methods_T_Imms_ImmMap_2.htm\u00001770","ImmSet Methods\u0000html/Methods_T_Imms_ImmSet.htm\u000082","ImmSet(T) Methods\u0000html/Methods_T_Imms_ImmSet_1.htm\u00001167","ImmSortedMap Methods\u0000html/Methods_T_Imms_ImmSortedMap.htm\u0000162","ImmSortedMap(TKey, TValue) Methods\u0000html/Methods_T_Imms_ImmSortedMap_2.htm\u00001877","ImmSortedSet Methods\u0000html/Methods_T_Imms_ImmSortedSet.htm\u0000130","ImmSortedSet(T) Methods\u0000html/Methods_T_Imms_ImmSortedSet_1.htm\u00001247","ImmVector Methods\u0000html/Methods_T_Imms_ImmVector.htm\u000058","ImmVector(T) Methods\u0000html/Methods_T_Imms_ImmVector_1.htm\u00001995","Kvp Methods\u0000html/Methods_T_Imms_Kvp.htm\u000076","NoValueException Methods\u0000html/Methods_T_Imms_NoValueException.htm\u0000150","Optional Methods\u0000html/Methods_T_Imms_Optional.htm\u000051","OptionalExt Methods\u0000html/Methods_T_Imms_OptionalExt.htm\u0000437","Optional(T) Methods\u0000html/Methods_T_Imms_Optional_1.htm\u0000705","AbstractIterable(TElem, TIterable, TBuilder).Aggregate Method (Func(TElem, TElem, TElem))\u0000html/M_Imms_Abstract_AbstractIterable_3_Aggregate.htm\u0000132","AbstractIterable(TElem, TIterable, TBuilder).Aggregate(TResult) Method (TResult, Func(TResult, TElem, TResult))\u0000html/M_Imms_Abstract_AbstractIterable_3_Aggregate__1.htm\u0000145","AbstractIterable(TElem, TIterable, TBuilder).All Method\u0000html/M_Imms_Abstract_AbstractIterable_3_All.htm\u000097","AbstractIterable(TElem, TIterable, TBuilder).Any Method\u0000html/M_Imms_Abstract_AbstractIterable_3_Any.htm\u000097","AbstractIterable(TElem, TIterable, TBuilder).CopyTo Method (TElem[], Int32)\u0000html/M_Imms_Abstract_AbstractIterable_3_CopyTo.htm\u0000121","AbstractIterable(TElem, TIterable, TBuilder).CopyTo Method (TElem[], Int32, Int32)\u0000html/M_Imms_Abstract_AbstractIterable_3_CopyTo_1.htm\u0000145","AbstractIterable(TElem, TIterable, TBuilder).Count Method\u0000html/M_Imms_Abstract_AbstractIterable_3_Count.htm\u000095","AbstractIterable(TElem, TIterable, TBuilder).Find Method\u0000html/M_Imms_Abstract_AbstractIterable_3_Find.htm\u0000118","AbstractIterable(TElem, TIterable, TBuilder).ForEach Method\u0000html/M_Imms_Abstract_AbstractIterable_3_ForEach.htm\u0000100","AbstractIterable(TElem, TIterable, TBuilder).ForEachWhile Method\u0000html/M_Imms_Abstract_AbstractIterable_3_ForEachWhile.htm\u0000119","AbstractIterable(TElem, TIterable, TBuilder).GetEnumerator Method\u0000html/M_Imms_Abstract_AbstractIterable_3_GetEnumerator.htm\u000093","AbstractIterable(TElem, TIterable, TBuilder)Â Implicit Conversion (AbstractIterable(TElem, TIterable, TBuilder) to TIterable)\u0000html/M_Imms_Abstract_AbstractIterable_3_op_Implicit.htm\u0000115","AbstractIterable(TElem, TIterable, TBuilder).Pick(TResult) Method\u0000html/M_Imms_Abstract_AbstractIterable_3_Pick__1.htm\u0000125","AbstractIterable(TElem, TIterable, TBuilder).Print Method\u0000html/M_Imms_Abstract_AbstractIterable_3_Print.htm\u0000134","AbstractIterable(TElem, TIterable, TBuilder).Single Method\u0000html/M_Imms_Abstract_AbstractIterable_3_Single.htm\u0000105","AbstractIterable(TElem, TIterable, TBuilder).ToArray Method\u0000html/M_Imms_Abstract_AbstractIterable_3_ToArray.htm\u000071","AbstractIterable(TElem, TIterable, TBuilder).Where Method\u0000html/M_Imms_Abstract_AbstractIterable_3_Where.htm\u0000104","AbstractMap(TKey, TValue, TMap).Add Method (KeyValuePair(TKey, TValue))\u0000html/M_Imms_Abstract_AbstractMap_3_Add.htm\u0000107","AbstractMap(TKey, TValue, TMap).AddRange Method\u0000html/M_Imms_Abstract_AbstractMap_3_AddRange.htm\u0000150","AbstractMap(TKey, TValue, TMap).Add Method (TKey, TValue)\u0000html/M_Imms_Abstract_AbstractMap_3_Add_1.htm\u0000120","AbstractMap(TKey, TValue, TMap).Aggregate(TResult) Method (TResult, Func(TResult, TKey, TValue, TResult))\u0000html/M_Imms_Abstract_AbstractMap_3_Aggregate__1.htm\u0000146","AbstractMap(TKey, TValue, TMap).All Method (Func(TKey, TValue, Boolean))\u0000html/M_Imms_Abstract_AbstractMap_3_All.htm\u0000114","AbstractMap(TKey, TValue, TMap).Any Method (Func(TKey, TValue, Boolean))\u0000html/M_Imms_Abstract_AbstractMap_3_Any.htm\u0000114","AbstractMap(TKey, TValue, TMap).ContainsKey Method\u0000html/M_Imms_Abstract_AbstractMap_3_ContainsKey.htm\u0000100","AbstractMap(TKey, TValue, TMap).Count Method (Func(TKey, TValue, Boolean))\u0000html/M_Imms_Abstract_AbstractMap_3_Count.htm\u0000113","AbstractMap(TKey, TValue, TMap).Difference Method\u0000html/M_Imms_Abstract_AbstractMap_3_Difference.htm\u0000129","AbstractMap(TKey, TValue, TMap).Except(TValue2) Method\u0000html/M_Imms_Abstract_AbstractMap_3_Except__1.htm\u0000297","AbstractMap(TKey, TValue, TMap).Find Method (Func(TKey, TValue, Boolean))\u0000html/M_Imms_Abstract_AbstractMap_3_Find.htm\u0000128","AbstractMap(TKey, TValue, TMap).ForEach Method (Action(TKey, TValue))\u0000html/M_Imms_Abstract_AbstractMap_3_ForEach.htm\u000096","AbstractMap(TKey, TValue, TMap).ForEachWhile Method (Func(TKey, TValue, Boolean))\u0000html/M_Imms_Abstract_AbstractMap_3_ForEachWhile.htm\u0000115","AbstractMap(TKey, TValue, TMap).Intersect(TValue2) Method\u0000html/M_Imms_Abstract_AbstractMap_3_Intersect__1.htm\u0000298","AbstractMap(TKey, TValue, TMap).MapEquals Method (IEnumerable(KeyValuePair(TKey, TValue)), IComparer(TValue))\u0000html/M_Imms_Abstract_AbstractMap_3_MapEquals.htm\u0000182","AbstractMap(TKey, TValue, TMap).MapEquals Method (IEnumerable(KeyValuePair(TKey, TValue)), IEqualityComparer(TValue))\u0000html/M_Imms_Abstract_AbstractMap_3_MapEquals_1.htm\u0000197","AbstractMap(TKey, TValue, TMap).MapEquals Method (IEnumerable(KeyValuePair(TKey, TValue)), Func(TValue, TValue, Boolean))\u0000html/M_Imms_Abstract_AbstractMap_3_MapEquals_2.htm\u0000197","AbstractMap(TKey, TValue, TMap).Addition Operator (AbstractMap(TKey, TValue, TMap), IEnumerable(KeyValuePair(TKey, TValue)))\u0000html/M_Imms_Abstract_AbstractMap_3_op_Addition.htm\u0000176","AbstractMap(TKey, TValue, TMap).Addition Operator (AbstractMap(TKey, TValue, TMap), KeyValuePair(TKey, TValue))\u0000html/M_Imms_Abstract_AbstractMap_3_op_Addition_1.htm\u0000165","AbstractMap(TKey, TValue, TMap).Subtraction Operator (AbstractMap(TKey, TValue, TMap), IEnumerable(KeyValuePair(TKey, TValue)))\u0000html/M_Imms_Abstract_AbstractMap_3_op_Subtraction.htm\u0000176","AbstractMap(TKey, TValue, TMap).Subtraction Operator (AbstractMap(TKey, TValue, TMap), IEnumerable(TKey))\u0000html/M_Imms_Abstract_AbstractMap_3_op_Subtraction_1.htm\u0000155","AbstractMap(TKey, TValue, TMap).Subtraction Operator (AbstractMap(TKey, TValue, TMap), TKey)\u0000html/M_Imms_Abstract_AbstractMap_3_op_Subtraction_2.htm\u0000142","AbstractMap(TKey, TValue, TMap).Pick(TResult) Method (Func(TKey, TValue, Optional(TResult)))\u0000html/M_Imms_Abstract_AbstractMap_3_Pick__1.htm\u0000141","AbstractMap(TKey, TValue, TMap).Remove Method\u0000html/M_Imms_Abstract_AbstractMap_3_Remove.htm\u000083","AbstractMap(TKey, TValue, TMap).RemoveRange Method\u0000html/M_Imms_Abstract_AbstractMap_3_RemoveRange.htm\u0000107","AbstractMap(TKey, TValue, TMap).Set Method\u0000html/M_Imms_Abstract_AbstractMap_3_Set.htm\u0000103","AbstractMap(TKey, TValue, TMap).SetRange Method\u0000html/M_Imms_Abstract_AbstractMap_3_SetRange.htm\u0000129","AbstractMap(TKey, TValue, TMap).TryGet Method\u0000html/M_Imms_Abstract_AbstractMap_3_TryGet.htm\u000095","AbstractMap(TKey, TValue, TMap).Union Method\u0000html/M_Imms_Abstract_AbstractMap_3_Union.htm\u0000229","AbstractSequential(TElem, TList).AggregateBack Method (Func(TElem, TElem, TElem))\u0000html/M_Imms_Abstract_AbstractSequential_2_AggregateBack.htm\u0000138","AbstractSequential(TElem, TList).AggregateBack(TResult) Method (TResult, Func(TResult, TElem, TResult))\u0000html/M_Imms_Abstract_AbstractSequential_2_AggregateBack__1.htm\u0000150","AbstractSequential(TElem, TList).CopyTo Method (TElem[], Int32, Int32)\u0000html/M_Imms_Abstract_AbstractSequential_2_CopyTo.htm\u0000141","AbstractSequential(TElem, TList).CopyTo Method (TElem[], Int32, Int32, Int32)\u0000html/M_Imms_Abstract_AbstractSequential_2_CopyTo_1.htm\u0000189","AbstractSequential(TElem, TList).Equals Method (Object)\u0000html/M_Imms_Abstract_AbstractSequential_2_Equals.htm\u0000112","AbstractSequential(TElem, TList).Equals Method (TList)\u0000html/M_Imms_Abstract_AbstractSequential_2_Equals_1.htm\u0000101","AbstractSequential(TElem, TList).FindIndex Method (Func(TElem, Boolean))\u0000html/M_Imms_Abstract_AbstractSequential_2_FindIndex.htm\u0000119","AbstractSequential(TElem, TList).FindIndex Method (TElem)\u0000html/M_Imms_Abstract_AbstractSequential_2_FindIndex_1.htm\u0000111","AbstractSequential(TElem, TList).FindLast Method\u0000html/M_Imms_Abstract_AbstractSequential_2_FindLast.htm\u0000115","AbstractSequential(TElem, TList).FindLastIndex Method\u0000html/M_Imms_Abstract_AbstractSequential_2_FindLastIndex.htm\u000098","AbstractSequential(TElem, TList).ForEachBack Method\u0000html/M_Imms_Abstract_AbstractSequential_2_ForEachBack.htm\u000096","AbstractSequential(TElem, TList).ForEachBackWhile Method\u0000html/M_Imms_Abstract_AbstractSequential_2_ForEachBackWhile.htm\u0000111","AbstractSequential(TElem, TList).GetHashCode Method\u0000html/M_Imms_Abstract_AbstractSequential_2_GetHashCode.htm\u000076","AbstractSequential(TElem, TList).Equality Operator\u0000html/M_Imms_Abstract_AbstractSequential_2_op_Equality.htm\u0000121","AbstractSequential(TElem, TList).Inequality Operator\u0000html/M_Imms_Abstract_AbstractSequential_2_op_Inequality.htm\u0000117","AbstractSequential(TElem, TList).OrderBy Method (IComparer(TElem))\u0000html/M_Imms_Abstract_AbstractSequential_2_OrderBy.htm\u000096","AbstractSequential(TElem, TList).OrderByDescending(TKey1) Method\u0000html/M_Imms_Abstract_AbstractSequential_2_OrderByDescending__1.htm\u000098","AbstractSequential(TElem, TList).OrderBy Method (IComparer(TElem)[])\u0000html/M_Imms_Abstract_AbstractSequential_2_OrderBy_1.htm\u000099","AbstractSequential(TElem, TList).OrderBy(TKey1) Method (Func(TElem, TKey1))\u0000html/M_Imms_Abstract_AbstractSequential_2_OrderBy__1.htm\u0000108","AbstractSequential(TElem, TList).Reverse Method\u0000html/M_Imms_Abstract_AbstractSequential_2_Reverse.htm\u000063","AbstractSequential(TElem, TList).SequenceEquals Method\u0000html/M_Imms_Abstract_AbstractSequential_2_SequenceEquals.htm\u0000113","AbstractSequential(TElem, TList).Skip Method\u0000html/M_Imms_Abstract_AbstractSequential_2_Skip.htm\u0000110","AbstractSequential(TElem, TList).SkipWhile Method\u0000html/M_Imms_Abstract_AbstractSequential_2_SkipWhile.htm\u0000103","AbstractSequential(TElem, TList).Take Method\u0000html/M_Imms_Abstract_AbstractSequential_2_Take.htm\u0000106","AbstractSequential(TElem, TList).TakeWhile Method\u0000html/M_Imms_Abstract_AbstractSequential_2_TakeWhile.htm\u000099","AbstractSequential(TElem, TList).TryGet Method\u0000html/M_Imms_Abstract_AbstractSequential_2_TryGet.htm\u000089","AbstractSet(TElem, TSet).Add Method\u0000html/M_Imms_Abstract_AbstractSet_2_Add.htm\u000088","AbstractSet(TElem, TSet).AddRange Method\u0000html/M_Imms_Abstract_AbstractSet_2_AddRange.htm\u000081","AbstractSet(TElem, TSet).Contains Method\u0000html/M_Imms_Abstract_AbstractSet_2_Contains.htm\u000083","AbstractSet(TElem, TSet).Difference Method\u0000html/M_Imms_Abstract_AbstractSet_2_Difference.htm\u0000107","AbstractSet(TElem, TSet).Except Method\u0000html/M_Imms_Abstract_AbstractSet_2_Except.htm\u0000108","AbstractSet(TElem, TSet).ExceptInverse Method\u0000html/M_Imms_Abstract_AbstractSet_2_ExceptInverse.htm\u0000103","AbstractSet(TElem, TSet).Intersect Method\u0000html/M_Imms_Abstract_AbstractSet_2_Intersect.htm\u000099","AbstractSet(TElem, TSet).IsDisjointWith Method\u0000html/M_Imms_Abstract_AbstractSet_2_IsDisjointWith.htm\u000098","AbstractSet(TElem, TSet).IsProperSubsetOf Method\u0000html/M_Imms_Abstract_AbstractSet_2_IsProperSubsetOf.htm\u0000113","AbstractSet(TElem, TSet).IsProperSupersetOf Method\u0000html/M_Imms_Abstract_AbstractSet_2_IsProperSupersetOf.htm\u0000113","AbstractSet(TElem, TSet).IsSubsetOf Method\u0000html/M_Imms_Abstract_AbstractSet_2_IsSubsetOf.htm\u0000112","AbstractSet(TElem, TSet).IsSupersetOf Method\u0000html/M_Imms_Abstract_AbstractSet_2_IsSupersetOf.htm\u0000120","AbstractSet(TElem, TSet).Addition Operator (AbstractSet(TElem, TSet), IEnumerable(TElem))\u0000html/M_Imms_Abstract_AbstractSet_2_op_Addition.htm\u0000141","AbstractSet(TElem, TSet).Addition Operator (AbstractSet(TElem, TSet), TElem)\u0000html/M_Imms_Abstract_AbstractSet_2_op_Addition_1.htm\u0000126","AbstractSet(TElem, TSet).BitwiseAnd Operator\u0000html/M_Imms_Abstract_AbstractSet_2_op_BitwiseAnd.htm\u0000126","AbstractSet(TElem, TSet).ExclusiveOr Operator\u0000html/M_Imms_Abstract_AbstractSet_2_op_ExclusiveOr.htm\u0000118","AbstractSet(TElem, TSet).Subtraction Operator (AbstractSet(TElem, TSet), IEnumerable(TElem))\u0000html/M_Imms_Abstract_AbstractSet_2_op_Subtraction.htm\u0000143","AbstractSet(TElem, TSet).Subtraction Operator (AbstractSet(TElem, TSet), TElem)\u0000html/M_Imms_Abstract_AbstractSet_2_op_Subtraction_1.htm\u0000126","AbstractSet(TElem, TSet).RelatesTo Method\u0000html/M_Imms_Abstract_AbstractSet_2_RelatesTo.htm\u0000118","AbstractSet(TElem, TSet).Remove Method\u0000html/M_Imms_Abstract_AbstractSet_2_Remove.htm\u000088","AbstractSet(TElem, TSet).SetEquals Method\u0000html/M_Imms_Abstract_AbstractSet_2_SetEquals.htm\u0000121","AbstractSet(TElem, TSet).Union Method\u0000html/M_Imms_Abstract_AbstractSet_2_Union.htm\u0000106","IAnyIterableBuilder(TElem).Add Method\u0000html/M_Imms_Abstract_IAnyIterableBuilder_1_Add.htm\u000071","IAnyIterableBuilder(TElem).AddRange Method\u0000html/M_Imms_Abstract_IAnyIterableBuilder_1_AddRange.htm\u000070","IAnyMapBuilder(TKey, TValue).Remove Method\u0000html/M_Imms_Abstract_IAnyMapBuilder_2_Remove.htm\u000093","IAnyMapBuilder(TKey, TValue).TryGetKvp Method\u0000html/M_Imms_Abstract_IAnyMapBuilder_2_TryGetKvp.htm\u000096","IAnySetBuilder(TElem).Contains Method\u0000html/M_Imms_Abstract_IAnySetBuilder_1_Contains.htm\u000077","IAnySetBuilder(TElem).Remove Method\u0000html/M_Imms_Abstract_IAnySetBuilder_1_Remove.htm\u000084","IIterableBuilder(TElem, TResult).Produce Method\u0000html/M_Imms_Abstract_IIterableBuilder_2_Produce.htm\u000087","ImmList(T).AddFirst Method\u0000html/M_Imms_ImmList_1_AddFirst.htm\u000076","ImmList(T).AddFirstRange Method (ImmList(T))\u0000html/M_Imms_ImmList_1_AddFirstRange.htm\u000090","ImmList(T).AddFirstRange Method (IEnumerable(T))\u0000html/M_Imms_ImmList_1_AddFirstRange_1.htm\u0000120","ImmList(T).AddLast Method\u0000html/M_Imms_ImmList_1_AddLast.htm\u000076","ImmList(T).AddLastRange Method (ImmList(T))\u0000html/M_Imms_ImmList_1_AddLastRange.htm\u000090","ImmList(T).AddLastRange Method (IEnumerable(T))\u0000html/M_Imms_ImmList_1_AddLastRange_1.htm\u0000111","ImmList(T).Cast(TRElem) Method\u0000html/M_Imms_ImmList_1_Cast__1.htm\u000071","ImmList(T).Choose(TRElem) Method\u0000html/M_Imms_ImmList_1_Choose__1.htm\u0000113","ImmList(T).ForEach Method\u0000html/M_Imms_ImmList_1_ForEach.htm\u000083","ImmList(T).ForEachBack Method\u0000html/M_Imms_ImmList_1_ForEachBack.htm\u000084","ImmList(T).ForEachBackWhile Method\u0000html/M_Imms_ImmList_1_ForEachBackWhile.htm\u0000102","ImmList(T).ForEachWhile Method\u0000html/M_Imms_ImmList_1_ForEachWhile.htm\u0000105","ImmList(T).GetEnumerator Method\u0000html/M_Imms_ImmList_1_GetEnumerator.htm\u000070","ImmList(T).GroupBy(TKey) Method (Func(T, TKey), IEqualityComparer(TKey))\u0000html/M_Imms_ImmList_1_GroupBy__1.htm\u0000172","ImmList(T).GroupBy(TKey, TElem2) Method (Func(T, TKey), Func(T, TElem2), IEqualityComparer(TKey))\u0000html/M_Imms_ImmList_1_GroupBy__2.htm\u0000211","ImmList(T).GroupBy(TRElem, TElem2, TKey) Method (Func(T, TKey), Func(T, TElem2), Func(TKey, IEnumerable(TElem2), TRElem), IEqualityComparer(TKey))\u0000html/M_Imms_ImmList_1_GroupBy__3.htm\u0000256","ImmList(T).GroupJoin(TInner, TKey, TResult) Method\u0000html/M_Imms_ImmList_1_GroupJoin__3.htm\u0000236","ImmList(T).Insert Method\u0000html/M_Imms_ImmList_1_Insert.htm\u0000110","ImmList(T).InsertRange Method (Int32, ImmList(T))\u0000html/M_Imms_ImmList_1_InsertRange.htm\u0000134","ImmList(T).InsertRange Method (Int32, IEnumerable(T))\u0000html/M_Imms_ImmList_1_InsertRange_1.htm\u0000142","ImmList(T).Join(TInner, TKey) Method (IEnumerable(TInner), Func(T, TKey), Func(TInner, TKey), IEqualityComparer(TKey))\u0000html/M_Imms_ImmList_1_Join__2.htm\u0000231","ImmList(T).Join(TRElem, TInner, TKey) Method (IEnumerable(TInner), Func(T, TKey), Func(TInner, TKey), Func(T, TInner, TRElem), IEqualityComparer(TKey))\u0000html/M_Imms_ImmList_1_Join__3.htm\u0000272","ImmList(T).Addition Operator (ImmList(T), ImmList(T))\u0000html/M_Imms_ImmList_1_op_Addition.htm\u0000125","ImmList(T).Addition Operator (ImmList(T), IEnumerable(T))\u0000html/M_Imms_ImmList_1_op_Addition_1.htm\u0000127","ImmList(T).Addition Operator (ImmList(T), T)\u0000html/M_Imms_ImmList_1_op_Addition_2.htm\u0000115","ImmList(T).Addition Operator (IEnumerable(T), ImmList(T))\u0000html/M_Imms_ImmList_1_op_Addition_3.htm\u0000127","ImmList(T).Addition Operator (T, ImmList(T))\u0000html/M_Imms_ImmList_1_op_Addition_4.htm\u0000115","ImmList(T).RemoveAt Method\u0000html/M_Imms_ImmList_1_RemoveAt.htm\u000091","ImmList(T).RemoveFirst Method\u0000html/M_Imms_ImmList_1_RemoveFirst.htm\u000071","ImmList(T).RemoveLast Method\u0000html/M_Imms_ImmList_1_RemoveLast.htm\u000071","ImmList(T).Reverse Method\u0000html/M_Imms_ImmList_1_Reverse.htm\u000057","ImmList(T).ScanBack(TRElem) Method\u0000html/M_Imms_ImmList_1_ScanBack__1.htm\u0000139","ImmList(T).Scan(TRElem) Method\u0000html/M_Imms_ImmList_1_Scan__1.htm\u0000126","ImmList(T).SelectMany(TRElem) Method (Func(T, IEnumerable(TRElem)))\u0000html/M_Imms_ImmList_1_SelectMany__1.htm\u0000126","ImmList(T).SelectMany(TElem2, TRElem) Method (Func(T, IEnumerable(TElem2)), Func(T, TElem2, TRElem))\u0000html/M_Imms_ImmList_1_SelectMany__2.htm\u0000190","ImmList(T).Select(TRElem) Method (Func(T, Optional(TRElem)))\u0000html/M_Imms_ImmList_1_Select__1.htm\u0000124","ImmList(T).Select(TRElem) Method (Func(T, TRElem))\u0000html/M_Imms_ImmList_1_Select__1_1.htm\u0000106","ImmList(T).Update Method\u0000html/M_Imms_ImmList_1_Update.htm\u0000106","ImmList(T).Zip(TElem2) Method (IEnumerable(TElem2))\u0000html/M_Imms_ImmList_1_Zip__1.htm\u0000124","ImmList(T).Zip(TElem2, TRElem) Method (IEnumerable(TElem2), Func(T, TElem2, TRElem))\u0000html/M_Imms_ImmList_1_Zip__2.htm\u0000164","ImmList.Empty(T) Method\u0000html/M_Imms_ImmList_Empty__1.htm\u000074","ImmList.Of(T) Method\u0000html/M_Imms_ImmList_Of__1.htm\u000091","ImmList.ToImmList(T) Method\u0000html/M_Imms_ImmList_ToImmList__1.htm\u0000162","ImmMap(TKey, TValue).Empty Method\u0000html/M_Imms_ImmMap_2_Empty.htm\u000097","ImmMap(TKey, TValue).Except(TValue2) Method (IEnumerable(KeyValuePair(TKey, TValue2)), ValueSelector(TKey, TValue, TValue2, Optional(TValue)))\u0000html/M_Imms_ImmMap_2_Except__1.htm\u0000322","ImmMap(TKey, TValue).ForEachWhile Method (Func(KeyValuePair(TKey, TValue), Boolean))\u0000html/M_Imms_ImmMap_2_ForEachWhile.htm\u0000134","ImmMap(TKey, TValue).GetEnumerator Method\u0000html/M_Imms_ImmMap_2_GetEnumerator.htm\u000097","ImmMap(TKey, TValue).Remove Method\u0000html/M_Imms_ImmMap_2_Remove.htm\u000091","ImmMap(TKey, TValue).RemoveRange Method\u0000html/M_Imms_ImmMap_2_RemoveRange.htm\u0000107","ImmMap(TKey, TValue).TryGet Method\u0000html/M_Imms_ImmMap_2_TryGet.htm\u000086","ImmMap.CreateMap(TKey, TValue) Method\u0000html/M_Imms_ImmMap_CreateMap__2.htm\u0000165","ImmMap.Empty(TKey, TValue) Method\u0000html/M_Imms_ImmMap_Empty__2.htm\u0000122","ImmMap.Of(TKey, TValue) Method\u0000html/M_Imms_ImmMap_Of__2.htm\u0000101","ImmMap.ToImmMap(TKey, TValue) Method (IEnumerable(KeyValuePair(TKey, TValue)), IEqualityComparer(TKey))\u0000html/M_Imms_ImmMap_ToImmMap__2.htm\u0000233","ImmMap.ToImmMap(T, TKey, TValue) Method (IEnumerable(T), Func(T, TKey), Func(T, TValue), IEqualityComparer(TKey))\u0000html/M_Imms_ImmMap_ToImmMap__3.htm\u0000267","ImmSet(T).Add Method\u0000html/M_Imms_ImmSet_1_Add.htm\u000083","ImmSet(T).Contains Method\u0000html/M_Imms_ImmSet_1_Contains.htm\u000079","ImmSet(T).Empty Method\u0000html/M_Imms_ImmSet_1_Empty.htm\u000089","ImmSet(T).ForEachWhile Method\u0000html/M_Imms_ImmSet_1_ForEachWhile.htm\u0000105","ImmSet(T).GetEnumerator Method\u0000html/M_Imms_ImmSet_1_GetEnumerator.htm\u000082","ImmSet(T).Remove Method\u0000html/M_Imms_ImmSet_1_Remove.htm\u000083","ImmSet.CreateSet(T) Method\u0000html/M_Imms_ImmSet_CreateSet__1.htm\u0000149","ImmSet.Empty(T) Method\u0000html/M_Imms_ImmSet_Empty__1.htm\u000068","ImmSet.Of(T) Method\u0000html/M_Imms_ImmSet_Of__1.htm\u000077","ImmSet.ToImmSet(T) Method\u0000html/M_Imms_ImmSet_ToImmSet__1.htm\u0000177","ImmSortedMap(TKey, TValue).ByOrder Method\u0000html/M_Imms_ImmSortedMap_2_ByOrder.htm\u0000100","ImmSortedMap(TKey, TValue).Empty Method\u0000html/M_Imms_ImmSortedMap_2_Empty.htm\u000090","ImmSortedMap(TKey, TValue).Except(TValue2) Method (IEnumerable(KeyValuePair(TKey, TValue2)), ValueSelector(TKey, TValue, TValue2, Optional(TValue)))\u0000html/M_Imms_ImmSortedMap_2_Except__1.htm\u0000322","ImmSortedMap(TKey, TValue).ForEachWhile Method (Func(KeyValuePair(TKey, TValue), Boolean))\u0000html/M_Imms_ImmSortedMap_2_ForEachWhile.htm\u0000134","ImmSortedMap(TKey, TValue).GetEnumerator Method\u0000html/M_Imms_ImmSortedMap_2_GetEnumerator.htm\u000097","ImmSortedMap(TKey, TValue).IndexOf Method\u0000html/M_Imms_ImmSortedMap_2_IndexOf.htm\u000088","ImmSortedMap(TKey, TValue).Remove Method\u0000html/M_Imms_ImmSortedMap_2_Remove.htm\u000093","ImmSortedMap(TKey, TValue).RemoveMax Method\u0000html/M_Imms_ImmSortedMap_2_RemoveMax.htm\u000072","ImmSortedMap(TKey, TValue).RemoveMin Method\u0000html/M_Imms_ImmSortedMap_2_RemoveMin.htm\u000072","ImmSortedMap(TKey, TValue).RemoveRange Method\u0000html/M_Imms_ImmSortedMap_2_RemoveRange.htm\u0000107","ImmSortedMap(TKey, TValue).Slice Method\u0000html/M_Imms_ImmSortedMap_2_Slice.htm\u0000127","ImmSortedMap(TKey, TValue).TryGet Method\u0000html/M_Imms_ImmSortedMap_2_TryGet.htm\u000086","ImmSortedMap(TKey, TValue).Union Method\u0000html/M_Imms_ImmSortedMap_2_Union.htm\u0000211","ImmSortedMap.CreateOrderedMap(TKey, TValue) Method\u0000html/M_Imms_ImmSortedMap_CreateOrderedMap__2.htm\u0000160","ImmSortedMap.Empty(TKey, TValue) Method\u0000html/M_Imms_ImmSortedMap_Empty__2.htm\u000095","ImmSortedMap.Empty(TKey, TValue) Method (IComparer(TKey))\u0000html/M_Imms_ImmSortedMap_Empty__2_1.htm\u0000105","ImmSortedMap.Of(TKey, TValue) Method\u0000html/M_Imms_ImmSortedMap_Of__2.htm\u0000114","ImmSortedMap.ToImmSortedMap(TKey, TValue) Method (IEnumerable(KeyValuePair(TKey, TValue)))\u0000html/M_Imms_ImmSortedMap_ToImmSortedMap__2.htm\u0000203","ImmSortedMap.ToImmSortedMap(TKey, TValue) Method (IEnumerable(KeyValuePair(TKey, TValue)), IComparer(TKey))\u0000html/M_Imms_ImmSortedMap_ToImmSortedMap__2_1.htm\u0000211","ImmSortedSet(T).Add Method\u0000html/M_Imms_ImmSortedSet_1_Add.htm\u000083","ImmSortedSet(T).ByOrder Method\u0000html/M_Imms_ImmSortedSet_1_ByOrder.htm\u000069","ImmSortedSet(T).Contains Method\u0000html/M_Imms_ImmSortedSet_1_Contains.htm\u000079","ImmSortedSet(T).Empty Method\u0000html/M_Imms_ImmSortedSet_1_Empty.htm\u000078","ImmSortedSet(T).ForEachWhile Method\u0000html/M_Imms_ImmSortedSet_1_ForEachWhile.htm\u0000105","ImmSortedSet(T).GetEnumerator Method\u0000html/M_Imms_ImmSortedSet_1_GetEnumerator.htm\u000082","ImmSortedSet(T).IndexOf Method\u0000html/M_Imms_ImmSortedSet_1_IndexOf.htm\u000083","ImmSortedSet(T).Remove Method\u0000html/M_Imms_ImmSortedSet_1_Remove.htm\u000083","ImmSortedSet(T).RemoveMax Method\u0000html/M_Imms_ImmSortedSet_1_RemoveMax.htm\u000060","ImmSortedSet(T).RemoveMin Method\u0000html/M_Imms_ImmSortedSet_1_RemoveMin.htm\u000060","ImmSortedSet(T).Slice Method\u0000html/M_Imms_ImmSortedSet_1_Slice.htm\u0000117","ImmSortedSet(T).Union Method\u0000html/M_Imms_ImmSortedSet_1_Union.htm\u0000101","ImmSortedSet.CreateOrderedSet(T) Method\u0000html/M_Imms_ImmSortedSet_CreateOrderedSet__1.htm\u0000148","ImmSortedSet.Empty(T) Method\u0000html/M_Imms_ImmSortedSet_Empty__1.htm\u000089","ImmSortedSet.Empty(T) Method (IComparer(T))\u0000html/M_Imms_ImmSortedSet_Empty__1_1.htm\u000099","ImmSortedSet.Of(T) Method\u0000html/M_Imms_ImmSortedSet_Of__1.htm\u000089","ImmSortedSet.ToImmSortedSet(T) Method (IEnumerable(T))\u0000html/M_Imms_ImmSortedSet_ToImmSortedSet__1.htm\u0000181","ImmSortedSet.ToImmSortedSet(T) Method (IEnumerable(T), IComparer(T))\u0000html/M_Imms_ImmSortedSet_ToImmSortedSet__1_1.htm\u0000192","ImmVector(T).AddFirstRange Method\u0000html/M_Imms_ImmVector_1_AddFirstRange.htm\u0000120","ImmVector(T).AddLast Method\u0000html/M_Imms_ImmVector_1_AddLast.htm\u0000101","ImmVector(T).AddLastRange Method\u0000html/M_Imms_ImmVector_1_AddLastRange.htm\u0000134","ImmVector(T).Cast(TRElem) Method\u0000html/M_Imms_ImmVector_1_Cast__1.htm\u000071","ImmVector(T).Choose(TRElem) Method\u0000html/M_Imms_ImmVector_1_Choose__1.htm\u0000113","ImmVector(T).CopyTo Method (T[], Int32, Int32, Int32)\u0000html/M_Imms_ImmVector_1_CopyTo.htm\u0000180","ImmVector(T).ForEach Method\u0000html/M_Imms_ImmVector_1_ForEach.htm\u000086","ImmVector(T).ForEachBack Method\u0000html/M_Imms_ImmVector_1_ForEachBack.htm\u000087","ImmVector(T).ForEachBackWhile Method\u0000html/M_Imms_ImmVector_1_ForEachBackWhile.htm\u0000102","ImmVector(T).ForEachWhile Method\u0000html/M_Imms_ImmVector_1_ForEachWhile.htm\u0000105","ImmVector(T).GetEnumerator Method\u0000html/M_Imms_ImmVector_1_GetEnumerator.htm\u000082","ImmVector(T).GroupBy(TKey) Method (Func(T, TKey), IEqualityComparer(TKey))\u0000html/M_Imms_ImmVector_1_GroupBy__1.htm\u0000172","ImmVector(T).GroupBy(TKey, TElem2) Method (Func(T, TKey), Func(T, TElem2), IEqualityComparer(TKey))\u0000html/M_Imms_ImmVector_1_GroupBy__2.htm\u0000211","ImmVector(T).GroupBy(TRElem, TElem2, TKey) Method (Func(T, TKey), Func(T, TElem2), Func(TKey, IEnumerable(TElem2), TRElem), IEqualityComparer(TKey))\u0000html/M_Imms_ImmVector_1_GroupBy__3.htm\u0000256","ImmVector(T).GroupJoin(TInner, TKey, TResult) Method\u0000html/M_Imms_ImmVector_1_GroupJoin__3.htm\u0000236","ImmVector(T).Insert Method\u0000html/M_Imms_ImmVector_1_Insert.htm\u000084","ImmVector(T).InsertRange Method\u0000html/M_Imms_ImmVector_1_InsertRange.htm\u0000117","ImmVector(T).Join(TInner, TKey) Method (IEnumerable(TInner), Func(T, TKey), Func(TInner, TKey), IEqualityComparer(TKey))\u0000html/M_Imms_ImmVector_1_Join__2.htm\u0000231","ImmVector(T).Join(TRElem, TInner, TKey) Method (IEnumerable(TInner), Func(T, TKey), Func(TInner, TKey), Func(T, TInner, TRElem), IEqualityComparer(TKey))\u0000html/M_Imms_ImmVector_1_Join__3.htm\u0000272","ImmVector(T).RemoveLast Method\u0000html/M_Imms_ImmVector_1_RemoveLast.htm\u000072","ImmVector(T).ScanBack(TRElem) Method\u0000html/M_Imms_ImmVector_1_ScanBack__1.htm\u0000139","ImmVector(T).Scan(TRElem) Method\u0000html/M_Imms_ImmVector_1_Scan__1.htm\u0000126","ImmVector(T).SelectMany(TRElem) Method (Func(T, IEnumerable(TRElem)))\u0000html/M_Imms_ImmVector_1_SelectMany__1.htm\u0000126","ImmVector(T).SelectMany(TElem2, TRElem) Method (Func(T, IEnumerable(TElem2)), Func(T, TElem2, TRElem))\u0000html/M_Imms_ImmVector_1_SelectMany__2.htm\u0000190","ImmVector(T).Select(TRElem) Method (Func(T, Optional(TRElem)))\u0000html/M_Imms_ImmVector_1_Select__1.htm\u0000124","ImmVector(T).Select(TRElem) Method (Func(T, TRElem))\u0000html/M_Imms_ImmVector_1_Select__1_1.htm\u0000106","ImmVector(T).Skip Method\u0000html/M_Imms_ImmVector_1_Skip.htm\u0000105","ImmVector(T).Take Method\u0000html/M_Imms_ImmVector_1_Take.htm\u0000101","ImmVector(T).Update Method\u0000html/M_Imms_ImmVector_1_Update.htm\u0000109","ImmVector(T).Zip(TElem2) Method (IEnumerable(TElem2))\u0000html/M_Imms_ImmVector_1_Zip__1.htm\u0000124","ImmVector(T).Zip(TElem2, TRElem) Method (IEnumerable(TElem2), Func(T, TElem2, TRElem))\u0000html/M_Imms_ImmVector_1_Zip__2.htm\u0000164","ImmVector.Empty(T) Method\u0000html/M_Imms_ImmVector_Empty__1.htm\u000075","ImmVector.FromItems(T) Method\u0000html/M_Imms_ImmVector_FromItems__1.htm\u000091","ImmVector.ToImmVector(T) Method\u0000html/M_Imms_ImmVector_ToImmVector__1.htm\u0000158","Kvp.Of(TKey, TValue) Method (Tuple(TKey, TValue))\u0000html/M_Imms_Kvp_Of__2.htm\u0000125","Kvp.Of(TKey, TValue) Method (TKey, TValue)\u0000html/M_Imms_Kvp_Of__2_1.htm\u0000121","Kvp.ToTuple(TKey, TValue) Method\u0000html/M_Imms_Kvp_ToTuple__2.htm\u0000116","NoValueException Constructor\u0000html/M_Imms_NoValueException__ctor.htm\u000092","OptionalExt.AsOptional(T) Method (Nullable(T))\u0000html/M_Imms_OptionalExt_AsOptional__1.htm\u0000181","OptionalExt.AsOptional(T) Method (T)\u0000html/M_Imms_OptionalExt_AsOptional__1_1.htm\u0000162","OptionalExt.AsString(T) Method (Optional(T))\u0000html/M_Imms_OptionalExt_AsString__1.htm\u0000189","OptionalExt.AsString(T) Method (Optional(T), IFormatProvider)\u0000html/M_Imms_OptionalExt_AsString__1_1.htm\u0000226","OptionalExt.CompareTo(T) Method (Optional(T), Optional(T))\u0000html/M_Imms_OptionalExt_CompareTo__1.htm\u0000222","OptionalExt.CompareTo(T) Method (Optional(T), T)\u0000html/M_Imms_OptionalExt_CompareTo__1_1.htm\u0000218","OptionalExt.Filter(T) Method\u0000html/M_Imms_OptionalExt_Filter__1.htm\u0000173","OptionalExt.Flatten(T) Method\u0000html/M_Imms_OptionalExt_Flatten__1.htm\u0000165","OptionalExt.Map(T, TOut) Method (Optional(T), Func(T, Optional(TOut)))\u0000html/M_Imms_OptionalExt_Map__2.htm\u0000241","OptionalExt.Map(T, TOut) Method (Optional(T), Func(T, TOut))\u0000html/M_Imms_OptionalExt_Map__2_1.htm\u0000239","OptionalExt.Or(T) Method (Optional(T), Optional(T))\u0000html/M_Imms_OptionalExt_Or__1.htm\u0000196","OptionalExt.Or(T) Method (Optional(T), T)\u0000html/M_Imms_OptionalExt_Or__1_1.htm\u0000180","OptionalExt.ValueOrError(T) Method\u0000html/M_Imms_OptionalExt_ValueOrError__1.htm\u0000161","Optional(T).As(TOut) Method\u0000html/M_Imms_Optional_1_As__1.htm\u000083","Optional(T).Cast(TOut) Method\u0000html/M_Imms_Optional_1_Cast__1.htm\u000097","Optional(T).Equals Method (IAnyOptional)\u0000html/M_Imms_Optional_1_Equals.htm\u000094","Optional(T).Equals Method (Optional(T))\u0000html/M_Imms_Optional_1_Equals_1.htm\u000099","Optional(T).Equals Method (Object)\u0000html/M_Imms_Optional_1_Equals_2.htm\u0000110","Optional(T).Equals Method (T)\u0000html/M_Imms_Optional_1_Equals_3.htm\u0000109","Optional(T).Equals(T2) Method (Optional(T2))\u0000html/M_Imms_Optional_1_Equals__1.htm\u0000116","Optional(T).GetHashCode Method\u0000html/M_Imms_Optional_1_GetHashCode.htm\u000088","Optional(T).BitwiseOr Operator\u0000html/M_Imms_Optional_1_op_BitwiseOr.htm\u0000119","Optional(T).Equality Operator (Optional(T), IAnyOptional)\u0000html/M_Imms_Optional_1_op_Equality.htm\u0000128","Optional(T).Equality Operator (Optional(T), Optional(T))\u0000html/M_Imms_Optional_1_op_Equality_1.htm\u0000108","Optional(T).Equality Operator (Optional(T), T)\u0000html/M_Imms_Optional_1_op_Equality_2.htm\u000096","Optional(T).Equality Operator (T, Optional(T))\u0000html/M_Imms_Optional_1_op_Equality_3.htm\u000097","Optional(T)Â Explicit Conversion (Optional(T) to T)\u0000html/M_Imms_Optional_1_op_Explicit.htm\u000076","Optional(T)Â Implicit Conversion (AnyNone to Optional(T))\u0000html/M_Imms_Optional_1_op_Implicit.htm\u000094","Optional(T)Â Implicit Conversion (T to Optional(T))\u0000html/M_Imms_Optional_1_op_Implicit_1.htm\u000082","Optional(T).Inequality Operator (Optional(T), IAnyOptional)\u0000html/M_Imms_Optional_1_op_Inequality.htm\u0000138","Optional(T).Inequality Operator (Optional(T), Optional(T))\u0000html/M_Imms_Optional_1_op_Inequality_1.htm\u0000107","Optional(T).Inequality Operator (Optional(T), T)\u0000html/M_Imms_Optional_1_op_Inequality_2.htm\u0000105","Optional(T).Inequality Operator (T, Optional(T))\u0000html/M_Imms_Optional_1_op_Inequality_3.htm\u0000106","Optional(T).Some Method\u0000html/M_Imms_Optional_1_Some.htm\u000072","Optional(T).ToString Method\u0000html/M_Imms_Optional_1_ToString.htm\u000068","Optional.NoneOf(T) Method\u0000html/M_Imms_Optional_NoneOf__1.htm\u000071","Optional.Some(T) Method\u0000html/M_Imms_Optional_Some__1.htm\u000088","Imms Namespace\u0000html/N_Imms.htm\u0000338","Imms.Abstract Namespace\u0000html/N_Imms_Abstract.htm\u0000322","AbstractIterable(TElem, TIterable, TBuilder) Type Conversions\u0000html/Operators_T_Imms_Abstract_AbstractIterable_3.htm\u000067","AbstractMap(TKey, TValue, TMap) Operators\u0000html/Operators_T_Imms_Abstract_AbstractMap_3.htm\u0000101","AbstractSequential(TElem, TList) Operators\u0000html/Operators_T_Imms_Abstract_AbstractSequential_2.htm\u000051","AbstractSet(TElem, TSet) Operators\u0000html/Operators_T_Imms_Abstract_AbstractSet_2.htm\u0000184","ImmList(T) Operators\u0000html/Operators_T_Imms_ImmList_1.htm\u0000141","Optional(T) Operators and Type Conversions\u0000html/Operators_T_Imms_Optional_1.htm\u0000319","AbstractIterable(TElem, TIterable, TBuilder).Aggregate Method\u0000html/Overload_Imms_Abstract_AbstractIterable_3_Aggregate.htm\u000091","AbstractIterable(TElem, TIterable, TBuilder).CopyTo Method\u0000html/Overload_Imms_Abstract_AbstractIterable_3_CopyTo.htm\u000089","AbstractMap(TKey, TValue, TMap).Add Method\u0000html/Overload_Imms_Abstract_AbstractMap_3_Add.htm\u000076","AbstractMap(TKey, TValue, TMap).Aggregate Method\u0000html/Overload_Imms_Abstract_AbstractMap_3_Aggregate.htm\u0000140","AbstractMap(TKey, TValue, TMap).All Method\u0000html/Overload_Imms_Abstract_AbstractMap_3_All.htm\u000085","AbstractMap(TKey, TValue, TMap).Any Method\u0000html/Overload_Imms_Abstract_AbstractMap_3_Any.htm\u000085","AbstractMap(TKey, TValue, TMap).Count Method\u0000html/Overload_Imms_Abstract_AbstractMap_3_Count.htm\u000082","AbstractMap(TKey, TValue, TMap).Find Method\u0000html/Overload_Imms_Abstract_AbstractMap_3_Find.htm\u000092","AbstractMap(TKey, TValue, TMap).ForEach Method\u0000html/Overload_Imms_Abstract_AbstractMap_3_ForEach.htm\u000080","AbstractMap(TKey, TValue, TMap).ForEachWhile Method\u0000html/Overload_Imms_Abstract_AbstractMap_3_ForEachWhile.htm\u000097","AbstractMap(TKey, TValue, TMap).MapEquals Method\u0000html/Overload_Imms_Abstract_AbstractMap_3_MapEquals.htm\u0000177","AbstractMap(TKey, TValue, TMap).Addition Operator\u0000html/Overload_Imms_Abstract_AbstractMap_3_op_Addition.htm\u000063","AbstractMap(TKey, TValue, TMap).Subtraction Operator\u0000html/Overload_Imms_Abstract_AbstractMap_3_op_Subtraction.htm\u000072","AbstractMap(TKey, TValue, TMap).Pick Method\u0000html/Overload_Imms_Abstract_AbstractMap_3_Pick.htm\u000097","AbstractSequential(TElem, TList).AggregateBack Method\u0000html/Overload_Imms_Abstract_AbstractSequential_2_AggregateBack.htm\u000091","AbstractSequential(TElem, TList).CopyTo Method\u0000html/Overload_Imms_Abstract_AbstractSequential_2_CopyTo.htm\u0000140","AbstractSequential(TElem, TList).Equals Method\u0000html/Overload_Imms_Abstract_AbstractSequential_2_Equals.htm\u000084","AbstractSequential(TElem, TList).FindIndex Method\u0000html/Overload_Imms_Abstract_AbstractSequential_2_FindIndex.htm\u000064","AbstractSequential(TElem, TList).Item Property\u0000html/Overload_Imms_Abstract_AbstractSequential_2_Item.htm\u000064","AbstractSequential(TElem, TList).OrderBy Method\u0000html/Overload_Imms_Abstract_AbstractSequential_2_OrderBy.htm\u000080","AbstractSet(TElem, TSet).Addition Operator\u0000html/Overload_Imms_Abstract_AbstractSet_2_op_Addition.htm\u000082","AbstractSet(TElem, TSet).Subtraction Operator\u0000html/Overload_Imms_Abstract_AbstractSet_2_op_Subtraction.htm\u000084","ImmList(T).AddFirstRange Method\u0000html/Overload_Imms_ImmList_1_AddFirstRange.htm\u000059","ImmList(T).AddLastRange Method\u0000html/Overload_Imms_ImmList_1_AddLastRange.htm\u000053","ImmList(T).GroupBy Method\u0000html/Overload_Imms_ImmList_1_GroupBy.htm\u0000190","ImmList(T).InsertRange Method\u0000html/Overload_Imms_ImmList_1_InsertRange.htm\u000067","ImmList(T).Item Property\u0000html/Overload_Imms_ImmList_1_Item.htm\u000068","ImmList(T).Join Method\u0000html/Overload_Imms_ImmList_1_Join.htm\u0000119","ImmList(T).Addition Operator\u0000html/Overload_Imms_ImmList_1_op_Addition.htm\u0000143","ImmList(T).Select Method\u0000html/Overload_Imms_ImmList_1_Select.htm\u000072","ImmList(T).SelectMany Method\u0000html/Overload_Imms_ImmList_1_SelectMany.htm\u0000114","ImmList(T).Zip Method\u0000html/Overload_Imms_ImmList_1_Zip.htm\u000065","ImmMap(TKey, TValue).Except Method\u0000html/Overload_Imms_ImmMap_2_Except.htm\u0000162","ImmMap(TKey, TValue).ForEachWhile Method\u0000html/Overload_Imms_ImmMap_2_ForEachWhile.htm\u0000113","ImmMap.ToImmMap Method\u0000html/Overload_Imms_ImmMap_ToImmMap.htm\u0000107","ImmSortedMap(TKey, TValue).Except Method\u0000html/Overload_Imms_ImmSortedMap_2_Except.htm\u0000162","ImmSortedMap(TKey, TValue).ForEachWhile Method\u0000html/Overload_Imms_ImmSortedMap_2_ForEachWhile.htm\u0000113","ImmSortedMap.Empty Method\u0000html/Overload_Imms_ImmSortedMap_Empty.htm\u000061","ImmSortedMap.ToImmSortedMap Method\u0000html/Overload_Imms_ImmSortedMap_ToImmSortedMap.htm\u000083","ImmSortedSet.Empty Method\u0000html/Overload_Imms_ImmSortedSet_Empty.htm\u000054","ImmSortedSet.ToImmSortedSet Method\u0000html/Overload_Imms_ImmSortedSet_ToImmSortedSet.htm\u000065","ImmVector(T).CopyTo Method\u0000html/Overload_Imms_ImmVector_1_CopyTo.htm\u0000144","ImmVector(T).GroupBy Method\u0000html/Overload_Imms_ImmVector_1_GroupBy.htm\u0000190","ImmVector(T).Join Method\u0000html/Overload_Imms_ImmVector_1_Join.htm\u0000119","ImmVector(T).Select Method\u0000html/Overload_Imms_ImmVector_1_Select.htm\u000072","ImmVector(T).SelectMany Method\u0000html/Overload_Imms_ImmVector_1_SelectMany.htm\u0000114","ImmVector(T).Zip Method\u0000html/Overload_Imms_ImmVector_1_Zip.htm\u000065","Kvp.Of Method\u0000html/Overload_Imms_Kvp_Of.htm\u000057","OptionalExt.AsOptional Method\u0000html/Overload_Imms_OptionalExt_AsOptional.htm\u000062","OptionalExt.AsString Method\u0000html/Overload_Imms_OptionalExt_AsString.htm\u000090","OptionalExt.CompareTo Method\u0000html/Overload_Imms_OptionalExt_CompareTo.htm\u0000101","OptionalExt.Map Method\u0000html/Overload_Imms_OptionalExt_Map.htm\u0000110","OptionalExt.Or Method\u0000html/Overload_Imms_OptionalExt_Or.htm\u000083","Optional(T).Equals Method\u0000html/Overload_Imms_Optional_1_Equals.htm\u0000157","Optional(T).Equality Operator\u0000html/Overload_Imms_Optional_1_op_Equality.htm\u0000109","Optional(T)Â Implicit Conversion Operators\u0000html/Overload_Imms_Optional_1_op_Implicit.htm\u000064","Optional(T).Inequality Operator\u0000html/Overload_Imms_Optional_1_op_Inequality.htm\u0000136","AbstractIterable(TElem, TIterable, TBuilder) Properties\u0000html/Properties_T_Imms_Abstract_AbstractIterable_3.htm\u000063","AbstractMap(TKey, TValue, TMap) Properties\u0000html/Properties_T_Imms_Abstract_AbstractMap_3.htm\u0000113","AbstractSequential(TElem, TList) Properties\u0000html/Properties_T_Imms_Abstract_AbstractSequential_2.htm\u0000151","AbstractSet(TElem, TSet) Properties\u0000html/Properties_T_Imms_Abstract_AbstractSet_2.htm\u000092","IAnyIterableBuilder(TElem) Properties\u0000html/Properties_T_Imms_Abstract_IAnyIterableBuilder_1.htm\u000038","IAnyMapBuilder(TKey, TValue) Properties\u0000html/Properties_T_Imms_Abstract_IAnyMapBuilder_2.htm\u000053","IAnySetBuilder(TElem) Properties\u0000html/Properties_T_Imms_Abstract_IAnySetBuilder_1.htm\u000046","IBuilderFactory(TBuilder) Properties\u0000html/Properties_T_Imms_Abstract_IBuilderFactory_1.htm\u000036","IIterableBuilder(TElem, TResult) Properties\u0000html/Properties_T_Imms_Abstract_IIterableBuilder_2.htm\u000053","IMapBuilder(TKey, TValue, TMap) Properties\u0000html/Properties_T_Imms_Abstract_IMapBuilder_3.htm\u000060","ISequentialBuilder(TElem, TList) Properties\u0000html/Properties_T_Imms_Abstract_ISequentialBuilder_2.htm\u000053","ISetBuilder(TElem, TSet) Properties\u0000html/Properties_T_Imms_Abstract_ISetBuilder_2.htm\u000053","IAnyOptional Properties\u0000html/Properties_T_Imms_IAnyOptional.htm\u000058","ImmList(T) Properties\u0000html/Properties_T_Imms_ImmList_1.htm\u0000206","ImmMap(TKey, TValue) Properties\u0000html/Properties_T_Imms_ImmMap_2.htm\u0000141","ImmSet(T) Properties\u0000html/Properties_T_Imms_ImmSet_1.htm\u000094","ImmSortedMap(TKey, TValue) Properties\u0000html/Properties_T_Imms_ImmSortedMap_2.htm\u0000163","ImmSortedSet(T) Properties\u0000html/Properties_T_Imms_ImmSortedSet_1.htm\u0000114","ImmVector(T) Properties\u0000html/Properties_T_Imms_ImmVector_1.htm\u0000219","NoValueException Properties\u0000html/Properties_T_Imms_NoValueException.htm\u0000194","Optional Properties\u0000html/Properties_T_Imms_Optional.htm\u000045","Optional(T) Properties\u0000html/Properties_T_Imms_Optional_1.htm\u000072","AbstractIterable(TElem, TIterable, TBuilder).IsEmpty Property\u0000html/P_Imms_Abstract_AbstractIterable_3_IsEmpty.htm\u000075","AbstractIterable(TElem, TIterable, TBuilder).Length Property\u0000html/P_Imms_Abstract_AbstractIterable_3_Length.htm\u000076","AbstractMap(TKey, TValue, TMap).Item Property\u0000html/P_Imms_Abstract_AbstractMap_3_Item.htm\u000096","AbstractMap(TKey, TValue, TMap).Keys Property\u0000html/P_Imms_Abstract_AbstractMap_3_Keys.htm\u000084","AbstractMap(TKey, TValue, TMap).Values Property\u0000html/P_Imms_Abstract_AbstractMap_3_Values.htm\u000084","AbstractSequential(TElem, TList).First Property\u0000html/P_Imms_Abstract_AbstractSequential_2_First.htm\u000081","AbstractSequential(TElem, TList).Item Property (Int32)\u0000html/P_Imms_Abstract_AbstractSequential_2_Item.htm\u0000103","AbstractSequential(TElem, TList).Item Property (Int32, Int32)\u0000html/P_Imms_Abstract_AbstractSequential_2_Item_1.htm\u0000120","AbstractSequential(TElem, TList).Last Property\u0000html/P_Imms_Abstract_AbstractSequential_2_Last.htm\u000084","AbstractSequential(TElem, TList).TryFirst Property\u0000html/P_Imms_Abstract_AbstractSequential_2_TryFirst.htm\u000084","AbstractSequential(TElem, TList).TryLast Property\u0000html/P_Imms_Abstract_AbstractSequential_2_TryLast.htm\u000084","AbstractSet(TElem, TSet).Item Property\u0000html/P_Imms_Abstract_AbstractSet_2_Item.htm\u000083","IAnyIterableBuilder(TElem).Length Property\u0000html/P_Imms_Abstract_IAnyIterableBuilder_1_Length.htm\u000062","IBuilderFactory(TBuilder).EmptyBuilder Property\u0000html/P_Imms_Abstract_IBuilderFactory_1_EmptyBuilder.htm\u000060","IAnyOptional.IsNone Property\u0000html/P_Imms_IAnyOptional_IsNone.htm\u000060","IAnyOptional.IsSome Property\u0000html/P_Imms_IAnyOptional_IsSome.htm\u000059","IAnyOptional.Value Property\u0000html/P_Imms_IAnyOptional_Value.htm\u000064","ImmList(T).Empty Property\u0000html/P_Imms_ImmList_1_Empty.htm\u000062","ImmList(T).First Property\u0000html/P_Imms_ImmList_1_First.htm\u000072","ImmList(T).IsEmpty Property\u0000html/P_Imms_ImmList_1_IsEmpty.htm\u000061","ImmList(T).Item Property (Int32, Int32)\u0000html/P_Imms_ImmList_1_Item.htm\u0000115","ImmList(T).Last Property\u0000html/P_Imms_ImmList_1_Last.htm\u000072","ImmList(T).Length Property\u0000html/P_Imms_ImmList_1_Length.htm\u000069","ImmMap(TKey, TValue).IsEmpty Property\u0000html/P_Imms_ImmMap_2_IsEmpty.htm\u000066","ImmMap(TKey, TValue).Length Property\u0000html/P_Imms_ImmMap_2_Length.htm\u000067","ImmSet(T).IsEmpty Property\u0000html/P_Imms_ImmSet_1_IsEmpty.htm\u000061","ImmSet(T).Length Property\u0000html/P_Imms_ImmSet_1_Length.htm\u000062","ImmSortedMap(TKey, TValue).IsEmpty Property\u0000html/P_Imms_ImmSortedMap_2_IsEmpty.htm\u000066","ImmSortedMap(TKey, TValue).Length Property\u0000html/P_Imms_ImmSortedMap_2_Length.htm\u000067","ImmSortedMap(TKey, TValue).MaxItem Property\u0000html/P_Imms_ImmSortedMap_2_MaxItem.htm\u000076","ImmSortedMap(TKey, TValue).MinItem Property\u0000html/P_Imms_ImmSortedMap_2_MinItem.htm\u000076","ImmSortedSet(T).IsEmpty Property\u0000html/P_Imms_ImmSortedSet_1_IsEmpty.htm\u000061","ImmSortedSet(T).Length Property\u0000html/P_Imms_ImmSortedSet_1_Length.htm\u000062","ImmSortedSet(T).MaxItem Property\u0000html/P_Imms_ImmSortedSet_1_MaxItem.htm\u000061","ImmSortedSet(T).MinItem Property\u0000html/P_Imms_ImmSortedSet_1_MinItem.htm\u000061","ImmVector(T).Empty Property\u0000html/P_Imms_ImmVector_1_Empty.htm\u000062","ImmVector(T).First Property\u0000html/P_Imms_ImmVector_1_First.htm\u000082","ImmVector(T).IsEmpty Property\u0000html/P_Imms_ImmVector_1_IsEmpty.htm\u000061","ImmVector(T).Last Property\u0000html/P_Imms_ImmVector_1_Last.htm\u000075","ImmVector(T).Length Property\u0000html/P_Imms_ImmVector_1_Length.htm\u000062","Optional(T).IsNone Property\u0000html/P_Imms_Optional_1_IsNone.htm\u000066","Optional(T).IsSome Property\u0000html/P_Imms_Optional_1_IsSome.htm\u000066","Optional(T).None Property\u0000html/P_Imms_Optional_1_None.htm\u000067","Optional(T).Value Property\u0000html/P_Imms_Optional_1_Value.htm\u000067","Optional.None Property\u0000html/P_Imms_Optional_None.htm\u000072","AbstractIterable(TElem, TIterable, TBuilder) Class\u0000html/T_Imms_Abstract_AbstractIterable_3.htm\u0000759","AbstractMap(TKey, TValue, TMap) Class\u0000html/T_Imms_Abstract_AbstractMap_3.htm\u00001694","AbstractSequential(TElem, TList) Class\u0000html/T_Imms_Abstract_AbstractSequential_2.htm\u00001447","AbstractSet(TElem, TSet) Class\u0000html/T_Imms_Abstract_AbstractSet_2.htm\u00001315","IAnyIterableBuilder(TElem) Interface\u0000html/T_Imms_Abstract_IAnyIterableBuilder_1.htm\u0000165","IAnyMapBuilder(TKey, TValue) Interface\u0000html/T_Imms_Abstract_IAnyMapBuilder_2.htm\u0000220","IAnySetBuilder(TElem) Interface\u0000html/T_Imms_Abstract_IAnySetBuilder_1.htm\u0000213","IBuilderFactory(TBuilder) Interface\u0000html/T_Imms_Abstract_IBuilderFactory_1.htm\u0000102","IIterableBuilder(TElem, TResult) Interface\u0000html/T_Imms_Abstract_IIterableBuilder_2.htm\u0000223","IMapBuilder(TKey, TValue, TMap) Interface\u0000html/T_Imms_Abstract_IMapBuilder_3.htm\u0000324","ISequentialBuilder(TElem, TList) Interface\u0000html/T_Imms_Abstract_ISequentialBuilder_2.htm\u0000232","ISetBuilder(TElem, TSet) Interface\u0000html/T_Imms_Abstract_ISetBuilder_2.htm\u0000297","IAnyOptional Interface\u0000html/T_Imms_IAnyOptional.htm\u0000103","ImmList Class\u0000html/T_Imms_ImmList.htm\u000099","ImmList(T) Class\u0000html/T_Imms_ImmList_1.htm\u00002506","ImmMap Class\u0000html/T_Imms_ImmMap.htm\u0000211","ImmMap(TKey, TValue) Class\u0000html/T_Imms_ImmMap_2.htm\u00002049","ImmSet Class\u0000html/T_Imms_ImmSet.htm\u0000120","ImmSet(T) Class\u0000html/T_Imms_ImmSet_1.htm\u00001352","ImmSortedMap Class\u0000html/T_Imms_ImmSortedMap.htm\u0000197","ImmSortedMap(TKey, TValue) Class\u0000html/T_Imms_ImmSortedMap_2.htm\u00002178","ImmSortedSet Class\u0000html/T_Imms_ImmSortedSet.htm\u0000168","ImmSortedSet(T) Class\u0000html/T_Imms_ImmSortedSet_1.htm\u00001450","ImmVector Class\u0000html/T_Imms_ImmVector.htm\u0000124","ImmVector(T) Class\u0000html/T_Imms_ImmVector_1.htm\u00002365","Kvp Class\u0000html/T_Imms_Kvp.htm\u0000116","NoValueException Class\u0000html/T_Imms_NoValueException.htm\u0000399","Optional Class\u0000html/T_Imms_Optional.htm\u0000117","OptionalExt Class\u0000html/T_Imms_OptionalExt.htm\u0000479","Optional(T) Structure\u0000html/T_Imms_Optional_1.htm\u00001110","SetRelation Enumeration\u0000html/T_Imms_SetRelation.htm\u0000118","ValueSelector(TKey, TVal1, TVal2, TOut) Delegate\u0000html/T_Imms_ValueSelector_4.htm\u0000206"]