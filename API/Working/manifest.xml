<?xml version="1.0" encoding="utf-8"?>
<topics>
  <topic id="N:Imms" />
  <topic id="T:Imms.IAnyOptional" />
  <topic id="Properties.T:Imms.IAnyOptional" />
  <topic id="P:Imms.IAnyOptional.IsNone" />
  <topic id="P:Imms.IAnyOptional.IsSome" />
  <topic id="P:Imms.IAnyOptional.Value" />
  <topic id="T:Imms.ImmList" />
  <topic id="Methods.T:Imms.ImmList" />
  <topic id="M:Imms.ImmList.Empty``1" />
  <topic id="M:Imms.ImmList.Of``1(``0[])" />
  <topic id="M:Imms.ImmList.ToImmList``1(System.Collections.Generic.IEnumerable{``0})" />
  <topic id="T:Imms.ImmList`1" />
  <topic id="Methods.T:Imms.ImmList`1" />
  <topic id="Operators.T:Imms.ImmList`1" />
  <topic id="Properties.T:Imms.ImmList`1" />
  <topic id="Overload:Imms.ImmList`1.AddFirstRange" />
  <topic id="Overload:Imms.ImmList`1.AddLastRange" />
  <topic id="Overload:Imms.ImmList`1.GroupBy" />
  <topic id="Overload:Imms.ImmList`1.InsertRange" />
  <topic id="Overload:Imms.ImmList`1.Item" />
  <topic id="Overload:Imms.ImmList`1.Join" />
  <topic id="Overload:Imms.ImmList`1.op_Addition" />
  <topic id="Overload:Imms.ImmList`1.Select" />
  <topic id="Overload:Imms.ImmList`1.SelectMany" />
  <topic id="Overload:Imms.ImmList`1.Zip" />
  <topic id="M:Imms.ImmList`1.AddFirst(`0)" />
  <topic id="M:Imms.ImmList`1.AddFirstRange(Imms.ImmList{`0})" />
  <topic id="M:Imms.ImmList`1.AddFirstRange(System.Collections.Generic.IEnumerable{`0})" />
  <topic id="M:Imms.ImmList`1.AddLast(`0)" />
  <topic id="M:Imms.ImmList`1.AddLastRange(Imms.ImmList{`0})" />
  <topic id="M:Imms.ImmList`1.AddLastRange(System.Collections.Generic.IEnumerable{`0})" />
  <topic id="M:Imms.ImmList`1.Cast``1" />
  <topic id="M:Imms.ImmList`1.Choose``1(System.Func{`0,Imms.Optional{``0}})" />
  <topic id="P:Imms.ImmList`1.Empty" />
  <topic id="P:Imms.ImmList`1.First" />
  <topic id="M:Imms.ImmList`1.ForEach(System.Action{`0})" />
  <topic id="M:Imms.ImmList`1.ForEachBack(System.Action{`0})" />
  <topic id="M:Imms.ImmList`1.ForEachBackWhile(System.Func{`0,System.Boolean})" />
  <topic id="M:Imms.ImmList`1.ForEachWhile(System.Func{`0,System.Boolean})" />
  <topic id="M:Imms.ImmList`1.GetEnumerator" />
  <topic id="M:Imms.ImmList`1.GroupBy``1(System.Func{`0,``0},System.Collections.Generic.IEqualityComparer{``0})" />
  <topic id="M:Imms.ImmList`1.GroupBy``2(System.Func{`0,``0},System.Func{`0,``1},System.Collections.Generic.IEqualityComparer{``0})" />
  <topic id="M:Imms.ImmList`1.GroupBy``3(System.Func{`0,``2},System.Func{`0,``1},System.Func{``2,System.Collections.Generic.IEnumerable{``1},``0},System.Collections.Generic.IEqualityComparer{``2})" />
  <topic id="M:Imms.ImmList`1.GroupJoin``3(System.Collections.Generic.IEnumerable{``0},System.Func{`0,``1},System.Func{``0,``1},System.Func{`0,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
  <topic id="M:Imms.ImmList`1.Insert(System.Int32,`0)" />
  <topic id="M:Imms.ImmList`1.InsertRange(System.Int32,Imms.ImmList{`0})" />
  <topic id="M:Imms.ImmList`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
  <topic id="P:Imms.ImmList`1.IsEmpty" />
  <topic id="P:Imms.ImmList`1.Item(System.Int32,System.Int32)" />
  <topic id="M:Imms.ImmList`1.Join``2(System.Collections.Generic.IEnumerable{``0},System.Func{`0,``1},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
  <topic id="M:Imms.ImmList`1.Join``3(System.Collections.Generic.IEnumerable{``1},System.Func{`0,``2},System.Func{``1,``2},System.Func{`0,``1,``0},System.Collections.Generic.IEqualityComparer{``2})" />
  <topic id="P:Imms.ImmList`1.Last" />
  <topic id="P:Imms.ImmList`1.Length" />
  <topic id="M:Imms.ImmList`1.op_Addition(Imms.ImmList{`0},Imms.ImmList{`0})" />
  <topic id="M:Imms.ImmList`1.op_Addition(Imms.ImmList{`0},System.Collections.Generic.IEnumerable{`0})" />
  <topic id="M:Imms.ImmList`1.op_Addition(Imms.ImmList{`0},`0)" />
  <topic id="M:Imms.ImmList`1.op_Addition(System.Collections.Generic.IEnumerable{`0},Imms.ImmList{`0})" />
  <topic id="M:Imms.ImmList`1.op_Addition(`0,Imms.ImmList{`0})" />
  <topic id="M:Imms.ImmList`1.RemoveAt(System.Int32)" />
  <topic id="M:Imms.ImmList`1.RemoveFirst" />
  <topic id="M:Imms.ImmList`1.RemoveLast" />
  <topic id="M:Imms.ImmList`1.Reverse" />
  <topic id="M:Imms.ImmList`1.Scan``1(``0,System.Func{``0,`0,``0})" />
  <topic id="M:Imms.ImmList`1.ScanBack``1(``0,System.Func{``0,`0,``0})" />
  <topic id="M:Imms.ImmList`1.Select``1(System.Func{`0,Imms.Optional{``0}})" />
  <topic id="M:Imms.ImmList`1.Select``1(System.Func{`0,``0})" />
  <topic id="M:Imms.ImmList`1.SelectMany``2(System.Func{`0,System.Collections.Generic.IEnumerable{``0}},System.Func{`0,``0,``1})" />
  <topic id="M:Imms.ImmList`1.SelectMany``1(System.Func{`0,System.Collections.Generic.IEnumerable{``0}})" />
  <topic id="M:Imms.ImmList`1.Update(System.Int32,`0)" />
  <topic id="M:Imms.ImmList`1.Zip``1(System.Collections.Generic.IEnumerable{``0})" />
  <topic id="M:Imms.ImmList`1.Zip``2(System.Collections.Generic.IEnumerable{``0},System.Func{`0,``0,``1})" />
  <topic id="T:Imms.ImmMap" />
  <topic id="Methods.T:Imms.ImmMap" />
  <topic id="Overload:Imms.ImmMap.ToImmMap" />
  <topic id="M:Imms.ImmMap.CreateMap``2(System.Collections.Generic.IEqualityComparer{``0})" />
  <topic id="M:Imms.ImmMap.Empty``2(System.Collections.Generic.IEqualityComparer{``0})" />
  <topic id="M:Imms.ImmMap.Of``2(System.Collections.Generic.KeyValuePair{``0,``1}[])" />
  <topic id="M:Imms.ImmMap.ToImmMap``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})" />
  <topic id="M:Imms.ImmMap.ToImmMap``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
  <topic id="T:Imms.ImmMap`2" />
  <topic id="Methods.T:Imms.ImmMap`2" />
  <topic id="Properties.T:Imms.ImmMap`2" />
  <topic id="Overload:Imms.ImmMap`2.Except" />
  <topic id="Overload:Imms.ImmMap`2.ForEachWhile" />
  <topic id="M:Imms.ImmMap`2.Empty(System.Collections.Generic.IEqualityComparer{`0})" />
  <topic id="M:Imms.ImmMap`2.Except``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,``0}},Imms.ValueSelector{`0,`1,``0,Imms.Optional{`1}})" />
  <topic id="M:Imms.ImmMap`2.ForEachWhile(System.Func{System.Collections.Generic.KeyValuePair{`0,`1},System.Boolean})" />
  <topic id="M:Imms.ImmMap`2.GetEnumerator" />
  <topic id="P:Imms.ImmMap`2.IsEmpty" />
  <topic id="P:Imms.ImmMap`2.Length" />
  <topic id="M:Imms.ImmMap`2.Remove(`0)" />
  <topic id="M:Imms.ImmMap`2.RemoveRange(System.Collections.Generic.IEnumerable{`0})" />
  <topic id="M:Imms.ImmMap`2.TryGet(`0)" />
  <topic id="T:Imms.ImmSet" />
  <topic id="Methods.T:Imms.ImmSet" />
  <topic id="M:Imms.ImmSet.CreateSet``1(System.Collections.Generic.IEqualityComparer{``0})" />
  <topic id="M:Imms.ImmSet.Empty``1" />
  <topic id="M:Imms.ImmSet.Of``1(``0[])" />
  <topic id="M:Imms.ImmSet.ToImmSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
  <topic id="T:Imms.ImmSet`1" />
  <topic id="Methods.T:Imms.ImmSet`1" />
  <topic id="Properties.T:Imms.ImmSet`1" />
  <topic id="M:Imms.ImmSet`1.Add(`0)" />
  <topic id="M:Imms.ImmSet`1.Contains(`0)" />
  <topic id="M:Imms.ImmSet`1.Empty(System.Collections.Generic.IEqualityComparer{`0})" />
  <topic id="M:Imms.ImmSet`1.ForEachWhile(System.Func{`0,System.Boolean})" />
  <topic id="M:Imms.ImmSet`1.GetEnumerator" />
  <topic id="P:Imms.ImmSet`1.IsEmpty" />
  <topic id="P:Imms.ImmSet`1.Length" />
  <topic id="M:Imms.ImmSet`1.Remove(`0)" />
  <topic id="T:Imms.ImmSortedMap" />
  <topic id="Methods.T:Imms.ImmSortedMap" />
  <topic id="Overload:Imms.ImmSortedMap.Empty" />
  <topic id="Overload:Imms.ImmSortedMap.ToImmSortedMap" />
  <topic id="M:Imms.ImmSortedMap.CreateOrderedMap``2(System.Collections.Generic.IComparer{``0})" />
  <topic id="M:Imms.ImmSortedMap.Empty``2" />
  <topic id="M:Imms.ImmSortedMap.Empty``2(System.Collections.Generic.IComparer{``0})" />
  <topic id="M:Imms.ImmSortedMap.Of``2(System.Collections.Generic.KeyValuePair{``0,``1}[])" />
  <topic id="M:Imms.ImmSortedMap.ToImmSortedMap``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
  <topic id="M:Imms.ImmSortedMap.ToImmSortedMap``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})" />
  <topic id="T:Imms.ImmSortedMap`2" />
  <topic id="Methods.T:Imms.ImmSortedMap`2" />
  <topic id="Properties.T:Imms.ImmSortedMap`2" />
  <topic id="Overload:Imms.ImmSortedMap`2.Except" />
  <topic id="Overload:Imms.ImmSortedMap`2.ForEachWhile" />
  <topic id="M:Imms.ImmSortedMap`2.ByOrder(System.Int32)" />
  <topic id="M:Imms.ImmSortedMap`2.Empty(System.Collections.Generic.IComparer{`0})" />
  <topic id="M:Imms.ImmSortedMap`2.Except``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,``0}},Imms.ValueSelector{`0,`1,``0,Imms.Optional{`1}})" />
  <topic id="M:Imms.ImmSortedMap`2.ForEachWhile(System.Func{System.Collections.Generic.KeyValuePair{`0,`1},System.Boolean})" />
  <topic id="M:Imms.ImmSortedMap`2.GetEnumerator" />
  <topic id="M:Imms.ImmSortedMap`2.IndexOf(`0)" />
  <topic id="P:Imms.ImmSortedMap`2.IsEmpty" />
  <topic id="P:Imms.ImmSortedMap`2.Length" />
  <topic id="P:Imms.ImmSortedMap`2.MaxItem" />
  <topic id="P:Imms.ImmSortedMap`2.MinItem" />
  <topic id="M:Imms.ImmSortedMap`2.Remove(`0)" />
  <topic id="M:Imms.ImmSortedMap`2.RemoveMax" />
  <topic id="M:Imms.ImmSortedMap`2.RemoveMin" />
  <topic id="M:Imms.ImmSortedMap`2.RemoveRange(System.Collections.Generic.IEnumerable{`0})" />
  <topic id="M:Imms.ImmSortedMap`2.Slice(Imms.Optional{`0},Imms.Optional{`0})" />
  <topic id="M:Imms.ImmSortedMap`2.TryGet(`0)" />
  <topic id="M:Imms.ImmSortedMap`2.Union(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},Imms.ValueSelector{`0,`1,`1,`1})" />
  <topic id="T:Imms.ImmSortedSet" />
  <topic id="Methods.T:Imms.ImmSortedSet" />
  <topic id="Overload:Imms.ImmSortedSet.Empty" />
  <topic id="Overload:Imms.ImmSortedSet.ToImmSortedSet" />
  <topic id="M:Imms.ImmSortedSet.CreateOrderedSet``1(System.Collections.Generic.IComparer{``0})" />
  <topic id="M:Imms.ImmSortedSet.Empty``1" />
  <topic id="M:Imms.ImmSortedSet.Empty``1(System.Collections.Generic.IComparer{``0})" />
  <topic id="M:Imms.ImmSortedSet.Of``1(``0[])" />
  <topic id="M:Imms.ImmSortedSet.ToImmSortedSet``1(System.Collections.Generic.IEnumerable{``0})" />
  <topic id="M:Imms.ImmSortedSet.ToImmSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})" />
  <topic id="T:Imms.ImmSortedSet`1" />
  <topic id="Methods.T:Imms.ImmSortedSet`1" />
  <topic id="Properties.T:Imms.ImmSortedSet`1" />
  <topic id="M:Imms.ImmSortedSet`1.Add(`0)" />
  <topic id="M:Imms.ImmSortedSet`1.ByOrder(System.Int32)" />
  <topic id="M:Imms.ImmSortedSet`1.Contains(`0)" />
  <topic id="M:Imms.ImmSortedSet`1.Empty(System.Collections.Generic.IComparer{`0})" />
  <topic id="M:Imms.ImmSortedSet`1.ForEachWhile(System.Func{`0,System.Boolean})" />
  <topic id="M:Imms.ImmSortedSet`1.GetEnumerator" />
  <topic id="M:Imms.ImmSortedSet`1.IndexOf(`0)" />
  <topic id="P:Imms.ImmSortedSet`1.IsEmpty" />
  <topic id="P:Imms.ImmSortedSet`1.Length" />
  <topic id="P:Imms.ImmSortedSet`1.MaxItem" />
  <topic id="P:Imms.ImmSortedSet`1.MinItem" />
  <topic id="M:Imms.ImmSortedSet`1.Remove(`0)" />
  <topic id="M:Imms.ImmSortedSet`1.RemoveMax" />
  <topic id="M:Imms.ImmSortedSet`1.RemoveMin" />
  <topic id="M:Imms.ImmSortedSet`1.Slice(Imms.Optional{`0},Imms.Optional{`0})" />
  <topic id="M:Imms.ImmSortedSet`1.Union(System.Collections.Generic.IEnumerable{`0})" />
  <topic id="T:Imms.ImmVector" />
  <topic id="Methods.T:Imms.ImmVector" />
  <topic id="M:Imms.ImmVector.Empty``1" />
  <topic id="M:Imms.ImmVector.FromItems``1(``0[])" />
  <topic id="M:Imms.ImmVector.ToImmVector``1(System.Collections.Generic.IEnumerable{``0})" />
  <topic id="T:Imms.ImmVector`1" />
  <topic id="Methods.T:Imms.ImmVector`1" />
  <topic id="Properties.T:Imms.ImmVector`1" />
  <topic id="Fields.T:Imms.ImmVector`1" />
  <topic id="Overload:Imms.ImmVector`1.CopyTo" />
  <topic id="Overload:Imms.ImmVector`1.GroupBy" />
  <topic id="Overload:Imms.ImmVector`1.Join" />
  <topic id="Overload:Imms.ImmVector`1.Select" />
  <topic id="Overload:Imms.ImmVector`1.SelectMany" />
  <topic id="Overload:Imms.ImmVector`1.Zip" />
  <topic id="M:Imms.ImmVector`1.AddFirstRange(System.Collections.Generic.IEnumerable{`0})" />
  <topic id="M:Imms.ImmVector`1.AddLast(`0)" />
  <topic id="M:Imms.ImmVector`1.AddLastRange(System.Collections.Generic.IEnumerable{`0})" />
  <topic id="M:Imms.ImmVector`1.Cast``1" />
  <topic id="M:Imms.ImmVector`1.Choose``1(System.Func{`0,Imms.Optional{``0}})" />
  <topic id="M:Imms.ImmVector`1.CopyTo(`0[],System.Int32,System.Int32,System.Int32)" />
  <topic id="P:Imms.ImmVector`1.Empty" />
  <topic id="P:Imms.ImmVector`1.First" />
  <topic id="M:Imms.ImmVector`1.ForEach(System.Action{`0})" />
  <topic id="M:Imms.ImmVector`1.ForEachBack(System.Action{`0})" />
  <topic id="M:Imms.ImmVector`1.ForEachBackWhile(System.Func{`0,System.Boolean})" />
  <topic id="M:Imms.ImmVector`1.ForEachWhile(System.Func{`0,System.Boolean})" />
  <topic id="M:Imms.ImmVector`1.GetEnumerator" />
  <topic id="M:Imms.ImmVector`1.GroupBy``1(System.Func{`0,``0},System.Collections.Generic.IEqualityComparer{``0})" />
  <topic id="M:Imms.ImmVector`1.GroupBy``2(System.Func{`0,``0},System.Func{`0,``1},System.Collections.Generic.IEqualityComparer{``0})" />
  <topic id="M:Imms.ImmVector`1.GroupBy``3(System.Func{`0,``2},System.Func{`0,``1},System.Func{``2,System.Collections.Generic.IEnumerable{``1},``0},System.Collections.Generic.IEqualityComparer{``2})" />
  <topic id="M:Imms.ImmVector`1.GroupJoin``3(System.Collections.Generic.IEnumerable{``0},System.Func{`0,``1},System.Func{``0,``1},System.Func{`0,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
  <topic id="M:Imms.ImmVector`1.Insert(System.Int32,`0)" />
  <topic id="M:Imms.ImmVector`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
  <topic id="P:Imms.ImmVector`1.IsEmpty" />
  <topic id="M:Imms.ImmVector`1.Join``2(System.Collections.Generic.IEnumerable{``0},System.Func{`0,``1},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
  <topic id="M:Imms.ImmVector`1.Join``3(System.Collections.Generic.IEnumerable{``1},System.Func{`0,``2},System.Func{``1,``2},System.Func{`0,``1,``0},System.Collections.Generic.IEqualityComparer{``2})" />
  <topic id="P:Imms.ImmVector`1.Last" />
  <topic id="P:Imms.ImmVector`1.Length" />
  <topic id="F:Imms.ImmVector`1.MaxCapacity" />
  <topic id="M:Imms.ImmVector`1.RemoveLast" />
  <topic id="M:Imms.ImmVector`1.Scan``1(``0,System.Func{``0,`0,``0})" />
  <topic id="M:Imms.ImmVector`1.ScanBack``1(``0,System.Func{``0,`0,``0})" />
  <topic id="M:Imms.ImmVector`1.Select``1(System.Func{`0,Imms.Optional{``0}})" />
  <topic id="M:Imms.ImmVector`1.Select``1(System.Func{`0,``0})" />
  <topic id="M:Imms.ImmVector`1.SelectMany``2(System.Func{`0,System.Collections.Generic.IEnumerable{``0}},System.Func{`0,``0,``1})" />
  <topic id="M:Imms.ImmVector`1.SelectMany``1(System.Func{`0,System.Collections.Generic.IEnumerable{``0}})" />
  <topic id="M:Imms.ImmVector`1.Skip(System.Int32)" />
  <topic id="M:Imms.ImmVector`1.Take(System.Int32)" />
  <topic id="M:Imms.ImmVector`1.Update(System.Int32,`0)" />
  <topic id="M:Imms.ImmVector`1.Zip``1(System.Collections.Generic.IEnumerable{``0})" />
  <topic id="M:Imms.ImmVector`1.Zip``2(System.Collections.Generic.IEnumerable{``0},System.Func{`0,``0,``1})" />
  <topic id="T:Imms.Kvp" />
  <topic id="Methods.T:Imms.Kvp" />
  <topic id="Overload:Imms.Kvp.Of" />
  <topic id="M:Imms.Kvp.Of``2(System.Tuple{``0,``1})" />
  <topic id="M:Imms.Kvp.Of``2(``0,``1)" />
  <topic id="M:Imms.Kvp.ToTuple``2(System.Collections.Generic.KeyValuePair{``0,``1})" />
  <topic id="T:Imms.NoValueException" />
  <topic id="Methods.T:Imms.NoValueException" />
  <topic id="Properties.T:Imms.NoValueException" />
  <topic id="M:Imms.NoValueException.#ctor(System.Type,System.String)" />
  <topic id="T:Imms.Optional" />
  <topic id="Methods.T:Imms.Optional" />
  <topic id="Properties.T:Imms.Optional" />
  <topic id="P:Imms.Optional.None" />
  <topic id="M:Imms.Optional.NoneOf``1" />
  <topic id="M:Imms.Optional.Some``1(``0)" />
  <topic id="T:Imms.Optional`1" />
  <topic id="Methods.T:Imms.Optional`1" />
  <topic id="Operators.T:Imms.Optional`1" />
  <topic id="Properties.T:Imms.Optional`1" />
  <topic id="Overload:Imms.Optional`1.Equals" />
  <topic id="Overload:Imms.Optional`1.op_Equality" />
  <topic id="Overload:Imms.Optional`1.op_Implicit" />
  <topic id="Overload:Imms.Optional`1.op_Inequality" />
  <topic id="M:Imms.Optional`1.As``1" />
  <topic id="M:Imms.Optional`1.Cast``1" />
  <topic id="M:Imms.Optional`1.Equals(Imms.IAnyOptional)" />
  <topic id="M:Imms.Optional`1.Equals(Imms.Optional{`0})" />
  <topic id="M:Imms.Optional`1.Equals``1(Imms.Optional{``0})" />
  <topic id="M:Imms.Optional`1.Equals(System.Object)" />
  <topic id="M:Imms.Optional`1.Equals(`0)" />
  <topic id="M:Imms.Optional`1.GetHashCode" />
  <topic id="P:Imms.Optional`1.IsNone" />
  <topic id="P:Imms.Optional`1.IsSome" />
  <topic id="P:Imms.Optional`1.None" />
  <topic id="M:Imms.Optional`1.op_BitwiseOr(Imms.Optional{`0},`0)" />
  <topic id="M:Imms.Optional`1.op_Equality(Imms.Optional{`0},Imms.IAnyOptional)" />
  <topic id="M:Imms.Optional`1.op_Equality(Imms.Optional{`0},Imms.Optional{`0})" />
  <topic id="M:Imms.Optional`1.op_Equality(Imms.Optional{`0},`0)" />
  <topic id="M:Imms.Optional`1.op_Equality(`0,Imms.Optional{`0})" />
  <topic id="M:Imms.Optional`1.op_Explicit(Imms.Optional{`0})~`0" />
  <topic id="M:Imms.Optional`1.op_Implicit(Imms.AnyNone)~Imms.Optional{`0}" />
  <topic id="M:Imms.Optional`1.op_Implicit(`0)~Imms.Optional{`0}" />
  <topic id="M:Imms.Optional`1.op_Inequality(Imms.Optional{`0},Imms.IAnyOptional)" />
  <topic id="M:Imms.Optional`1.op_Inequality(Imms.Optional{`0},Imms.Optional{`0})" />
  <topic id="M:Imms.Optional`1.op_Inequality(Imms.Optional{`0},`0)" />
  <topic id="M:Imms.Optional`1.op_Inequality(`0,Imms.Optional{`0})" />
  <topic id="M:Imms.Optional`1.Some(`0)" />
  <topic id="M:Imms.Optional`1.ToString" />
  <topic id="P:Imms.Optional`1.Value" />
  <topic id="T:Imms.OptionalExt" />
  <topic id="Methods.T:Imms.OptionalExt" />
  <topic id="Overload:Imms.OptionalExt.AsOptional" />
  <topic id="Overload:Imms.OptionalExt.AsString" />
  <topic id="Overload:Imms.OptionalExt.CompareTo" />
  <topic id="Overload:Imms.OptionalExt.Map" />
  <topic id="Overload:Imms.OptionalExt.Or" />
  <topic id="M:Imms.OptionalExt.AsOptional``1(System.Nullable{``0})" />
  <topic id="M:Imms.OptionalExt.AsOptional``1(``0)" />
  <topic id="M:Imms.OptionalExt.AsString``1(Imms.Optional{``0})" />
  <topic id="M:Imms.OptionalExt.AsString``1(Imms.Optional{``0},System.IFormatProvider)" />
  <topic id="M:Imms.OptionalExt.CompareTo``1(Imms.Optional{``0},Imms.Optional{``0})" />
  <topic id="M:Imms.OptionalExt.CompareTo``1(Imms.Optional{``0},``0)" />
  <topic id="M:Imms.OptionalExt.Filter``1(Imms.Optional{``0},System.Func{``0,System.Boolean})" />
  <topic id="M:Imms.OptionalExt.Flatten``1(Imms.Optional{Imms.Optional{``0}})" />
  <topic id="M:Imms.OptionalExt.Map``2(Imms.Optional{``0},System.Func{``0,Imms.Optional{``1}})" />
  <topic id="M:Imms.OptionalExt.Map``2(Imms.Optional{``0},System.Func{``0,``1})" />
  <topic id="M:Imms.OptionalExt.Or``1(Imms.Optional{``0},Imms.Optional{``0})" />
  <topic id="M:Imms.OptionalExt.Or``1(Imms.Optional{``0},``0)" />
  <topic id="M:Imms.OptionalExt.ValueOrError``1(Imms.Optional{``0},System.Exception)" />
  <topic id="T:Imms.SetRelation" />
  <topic id="T:Imms.ValueSelector`4" />
  <topic id="N:Imms.Abstract" />
  <topic id="T:Imms.Abstract.AbstractIterable`3" />
  <topic id="Methods.T:Imms.Abstract.AbstractIterable`3" />
  <topic id="Operators.T:Imms.Abstract.AbstractIterable`3" />
  <topic id="Properties.T:Imms.Abstract.AbstractIterable`3" />
  <topic id="Overload:Imms.Abstract.AbstractIterable`3.Aggregate" />
  <topic id="Overload:Imms.Abstract.AbstractIterable`3.CopyTo" />
  <topic id="M:Imms.Abstract.AbstractIterable`3.Aggregate(System.Func{`0,`0,`0})" />
  <topic id="M:Imms.Abstract.AbstractIterable`3.Aggregate``1(``0,System.Func{``0,`0,``0})" />
  <topic id="M:Imms.Abstract.AbstractIterable`3.All(System.Func{`0,System.Boolean})" />
  <topic id="M:Imms.Abstract.AbstractIterable`3.Any(System.Func{`0,System.Boolean})" />
  <topic id="M:Imms.Abstract.AbstractIterable`3.CopyTo(`0[],System.Int32)" />
  <topic id="M:Imms.Abstract.AbstractIterable`3.CopyTo(`0[],System.Int32,System.Int32)" />
  <topic id="M:Imms.Abstract.AbstractIterable`3.Count(System.Func{`0,System.Boolean})" />
  <topic id="M:Imms.Abstract.AbstractIterable`3.Find(System.Func{`0,System.Boolean})" />
  <topic id="M:Imms.Abstract.AbstractIterable`3.ForEach(System.Action{`0})" />
  <topic id="M:Imms.Abstract.AbstractIterable`3.ForEachWhile(System.Func{`0,System.Boolean})" />
  <topic id="M:Imms.Abstract.AbstractIterable`3.GetEnumerator" />
  <topic id="P:Imms.Abstract.AbstractIterable`3.IsEmpty" />
  <topic id="P:Imms.Abstract.AbstractIterable`3.Length" />
  <topic id="M:Imms.Abstract.AbstractIterable`3.op_Implicit(Imms.Abstract.AbstractIterable{`0,`1,`2})~`1" />
  <topic id="M:Imms.Abstract.AbstractIterable`3.Pick``1(System.Func{`0,Imms.Optional{``0}})" />
  <topic id="M:Imms.Abstract.AbstractIterable`3.Print(System.String,System.Func{`0,System.String})" />
  <topic id="M:Imms.Abstract.AbstractIterable`3.Single" />
  <topic id="M:Imms.Abstract.AbstractIterable`3.ToArray" />
  <topic id="M:Imms.Abstract.AbstractIterable`3.Where(System.Func{`0,System.Boolean})" />
  <topic id="T:Imms.Abstract.AbstractMap`3" />
  <topic id="Methods.T:Imms.Abstract.AbstractMap`3" />
  <topic id="Operators.T:Imms.Abstract.AbstractMap`3" />
  <topic id="Properties.T:Imms.Abstract.AbstractMap`3" />
  <topic id="Overload:Imms.Abstract.AbstractMap`3.Aggregate" />
  <topic id="Overload:Imms.Abstract.AbstractMap`3.All" />
  <topic id="Overload:Imms.Abstract.AbstractMap`3.Any" />
  <topic id="Overload:Imms.Abstract.AbstractMap`3.Count" />
  <topic id="Overload:Imms.Abstract.AbstractMap`3.Find" />
  <topic id="Overload:Imms.Abstract.AbstractMap`3.ForEach" />
  <topic id="Overload:Imms.Abstract.AbstractMap`3.ForEachWhile" />
  <topic id="Overload:Imms.Abstract.AbstractMap`3.Pick" />
  <topic id="Overload:Imms.Abstract.AbstractMap`3.Add" />
  <topic id="Overload:Imms.Abstract.AbstractMap`3.MapEquals" />
  <topic id="Overload:Imms.Abstract.AbstractMap`3.op_Addition" />
  <topic id="Overload:Imms.Abstract.AbstractMap`3.op_Subtraction" />
  <topic id="M:Imms.Abstract.AbstractMap`3.Add(System.Collections.Generic.KeyValuePair{`0,`1})" />
  <topic id="M:Imms.Abstract.AbstractMap`3.Add(`0,`1)" />
  <topic id="M:Imms.Abstract.AbstractMap`3.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})" />
  <topic id="M:Imms.Abstract.AbstractMap`3.Aggregate``1(``0,System.Func{``0,`0,`1,``0})" />
  <topic id="M:Imms.Abstract.AbstractMap`3.All(System.Func{`0,`1,System.Boolean})" />
  <topic id="M:Imms.Abstract.AbstractMap`3.Any(System.Func{`0,`1,System.Boolean})" />
  <topic id="M:Imms.Abstract.AbstractMap`3.ContainsKey(`0)" />
  <topic id="M:Imms.Abstract.AbstractMap`3.Count(System.Func{`0,`1,System.Boolean})" />
  <topic id="M:Imms.Abstract.AbstractMap`3.Difference(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})" />
  <topic id="M:Imms.Abstract.AbstractMap`3.Except``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,``0}},Imms.ValueSelector{`0,`1,``0,Imms.Optional{`1}})" />
  <topic id="M:Imms.Abstract.AbstractMap`3.Find(System.Func{`0,`1,System.Boolean})" />
  <topic id="M:Imms.Abstract.AbstractMap`3.ForEach(System.Action{`0,`1})" />
  <topic id="M:Imms.Abstract.AbstractMap`3.ForEachWhile(System.Func{`0,`1,System.Boolean})" />
  <topic id="M:Imms.Abstract.AbstractMap`3.Intersect``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,``0}},Imms.ValueSelector{`0,`1,``0,`1})" />
  <topic id="P:Imms.Abstract.AbstractMap`3.Item(`0)" />
  <topic id="P:Imms.Abstract.AbstractMap`3.Keys" />
  <topic id="M:Imms.Abstract.AbstractMap`3.MapEquals(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IComparer{`1})" />
  <topic id="M:Imms.Abstract.AbstractMap`3.MapEquals(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`1})" />
  <topic id="M:Imms.Abstract.AbstractMap`3.MapEquals(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Func{`1,`1,System.Boolean})" />
  <topic id="M:Imms.Abstract.AbstractMap`3.op_Addition(Imms.Abstract.AbstractMap{`0,`1,`2},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})" />
  <topic id="M:Imms.Abstract.AbstractMap`3.op_Addition(Imms.Abstract.AbstractMap{`0,`1,`2},System.Collections.Generic.KeyValuePair{`0,`1})" />
  <topic id="M:Imms.Abstract.AbstractMap`3.op_Subtraction(Imms.Abstract.AbstractMap{`0,`1,`2},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})" />
  <topic id="M:Imms.Abstract.AbstractMap`3.op_Subtraction(Imms.Abstract.AbstractMap{`0,`1,`2},System.Collections.Generic.IEnumerable{`0})" />
  <topic id="M:Imms.Abstract.AbstractMap`3.op_Subtraction(Imms.Abstract.AbstractMap{`0,`1,`2},`0)" />
  <topic id="M:Imms.Abstract.AbstractMap`3.Pick``1(System.Func{`0,`1,Imms.Optional{``0}})" />
  <topic id="M:Imms.Abstract.AbstractMap`3.Remove(`0)" />
  <topic id="M:Imms.Abstract.AbstractMap`3.RemoveRange(System.Collections.Generic.IEnumerable{`0})" />
  <topic id="M:Imms.Abstract.AbstractMap`3.Set(`0,`1)" />
  <topic id="M:Imms.Abstract.AbstractMap`3.SetRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})" />
  <topic id="M:Imms.Abstract.AbstractMap`3.TryGet(`0)" />
  <topic id="M:Imms.Abstract.AbstractMap`3.Union(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},Imms.ValueSelector{`0,`1,`1,`1})" />
  <topic id="P:Imms.Abstract.AbstractMap`3.Values" />
  <topic id="T:Imms.Abstract.AbstractSequential`2" />
  <topic id="Methods.T:Imms.Abstract.AbstractSequential`2" />
  <topic id="Operators.T:Imms.Abstract.AbstractSequential`2" />
  <topic id="Properties.T:Imms.Abstract.AbstractSequential`2" />
  <topic id="Overload:Imms.Abstract.AbstractSequential`2.CopyTo" />
  <topic id="Overload:Imms.Abstract.AbstractSequential`2.AggregateBack" />
  <topic id="Overload:Imms.Abstract.AbstractSequential`2.Equals" />
  <topic id="Overload:Imms.Abstract.AbstractSequential`2.FindIndex" />
  <topic id="Overload:Imms.Abstract.AbstractSequential`2.Item" />
  <topic id="Overload:Imms.Abstract.AbstractSequential`2.OrderBy" />
  <topic id="M:Imms.Abstract.AbstractSequential`2.AggregateBack(System.Func{`0,`0,`0})" />
  <topic id="M:Imms.Abstract.AbstractSequential`2.AggregateBack``1(``0,System.Func{``0,`0,``0})" />
  <topic id="M:Imms.Abstract.AbstractSequential`2.CopyTo(`0[],System.Int32,System.Int32)" />
  <topic id="M:Imms.Abstract.AbstractSequential`2.CopyTo(`0[],System.Int32,System.Int32,System.Int32)" />
  <topic id="M:Imms.Abstract.AbstractSequential`2.Equals(System.Object)" />
  <topic id="M:Imms.Abstract.AbstractSequential`2.Equals(`1)" />
  <topic id="M:Imms.Abstract.AbstractSequential`2.FindIndex(System.Func{`0,System.Boolean})" />
  <topic id="M:Imms.Abstract.AbstractSequential`2.FindIndex(`0)" />
  <topic id="M:Imms.Abstract.AbstractSequential`2.FindLast(System.Func{`0,System.Boolean})" />
  <topic id="M:Imms.Abstract.AbstractSequential`2.FindLastIndex(System.Func{`0,System.Boolean})" />
  <topic id="P:Imms.Abstract.AbstractSequential`2.First" />
  <topic id="M:Imms.Abstract.AbstractSequential`2.ForEachBack(System.Action{`0})" />
  <topic id="M:Imms.Abstract.AbstractSequential`2.ForEachBackWhile(System.Func{`0,System.Boolean})" />
  <topic id="M:Imms.Abstract.AbstractSequential`2.GetHashCode" />
  <topic id="P:Imms.Abstract.AbstractSequential`2.Item(System.Int32)" />
  <topic id="P:Imms.Abstract.AbstractSequential`2.Item(System.Int32,System.Int32)" />
  <topic id="P:Imms.Abstract.AbstractSequential`2.Last" />
  <topic id="M:Imms.Abstract.AbstractSequential`2.op_Equality(Imms.Abstract.AbstractSequential{`0,`1},Imms.Abstract.AbstractSequential{`0,`1})" />
  <topic id="M:Imms.Abstract.AbstractSequential`2.op_Inequality(Imms.Abstract.AbstractSequential{`0,`1},Imms.Abstract.AbstractSequential{`0,`1})" />
  <topic id="M:Imms.Abstract.AbstractSequential`2.OrderBy(System.Collections.Generic.IComparer{`0})" />
  <topic id="M:Imms.Abstract.AbstractSequential`2.OrderBy(System.Collections.Generic.IComparer{`0}[])" />
  <topic id="M:Imms.Abstract.AbstractSequential`2.OrderBy``1(System.Func{`0,``0})" />
  <topic id="M:Imms.Abstract.AbstractSequential`2.OrderByDescending``1(System.Func{`0,``0})" />
  <topic id="M:Imms.Abstract.AbstractSequential`2.Reverse" />
  <topic id="M:Imms.Abstract.AbstractSequential`2.SequenceEquals(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})" />
  <topic id="M:Imms.Abstract.AbstractSequential`2.Skip(System.Int32)" />
  <topic id="M:Imms.Abstract.AbstractSequential`2.SkipWhile(System.Func{`0,System.Boolean})" />
  <topic id="M:Imms.Abstract.AbstractSequential`2.Take(System.Int32)" />
  <topic id="M:Imms.Abstract.AbstractSequential`2.TakeWhile(System.Func{`0,System.Boolean})" />
  <topic id="P:Imms.Abstract.AbstractSequential`2.TryFirst" />
  <topic id="M:Imms.Abstract.AbstractSequential`2.TryGet(System.Int32)" />
  <topic id="P:Imms.Abstract.AbstractSequential`2.TryLast" />
  <topic id="T:Imms.Abstract.AbstractSet`2" />
  <topic id="Methods.T:Imms.Abstract.AbstractSet`2" />
  <topic id="Operators.T:Imms.Abstract.AbstractSet`2" />
  <topic id="Properties.T:Imms.Abstract.AbstractSet`2" />
  <topic id="Overload:Imms.Abstract.AbstractSet`2.op_Addition" />
  <topic id="Overload:Imms.Abstract.AbstractSet`2.op_Subtraction" />
  <topic id="M:Imms.Abstract.AbstractSet`2.Add(`0)" />
  <topic id="M:Imms.Abstract.AbstractSet`2.AddRange(System.Collections.Generic.IEnumerable{`0})" />
  <topic id="M:Imms.Abstract.AbstractSet`2.Contains(`0)" />
  <topic id="M:Imms.Abstract.AbstractSet`2.Difference(System.Collections.Generic.IEnumerable{`0})" />
  <topic id="M:Imms.Abstract.AbstractSet`2.Except(System.Collections.Generic.IEnumerable{`0})" />
  <topic id="M:Imms.Abstract.AbstractSet`2.ExceptInverse(System.Collections.Generic.IEnumerable{`0})" />
  <topic id="M:Imms.Abstract.AbstractSet`2.Intersect(System.Collections.Generic.IEnumerable{`0})" />
  <topic id="M:Imms.Abstract.AbstractSet`2.IsDisjointWith(System.Collections.Generic.IEnumerable{`0})" />
  <topic id="M:Imms.Abstract.AbstractSet`2.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})" />
  <topic id="M:Imms.Abstract.AbstractSet`2.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})" />
  <topic id="M:Imms.Abstract.AbstractSet`2.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})" />
  <topic id="M:Imms.Abstract.AbstractSet`2.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})" />
  <topic id="P:Imms.Abstract.AbstractSet`2.Item(`0)" />
  <topic id="M:Imms.Abstract.AbstractSet`2.op_Addition(Imms.Abstract.AbstractSet{`0,`1},System.Collections.Generic.IEnumerable{`0})" />
  <topic id="M:Imms.Abstract.AbstractSet`2.op_Addition(Imms.Abstract.AbstractSet{`0,`1},`0)" />
  <topic id="M:Imms.Abstract.AbstractSet`2.op_BitwiseAnd(Imms.Abstract.AbstractSet{`0,`1},System.Collections.Generic.IEnumerable{`0})" />
  <topic id="M:Imms.Abstract.AbstractSet`2.op_ExclusiveOr(Imms.Abstract.AbstractSet{`0,`1},System.Collections.Generic.IEnumerable{`0})" />
  <topic id="M:Imms.Abstract.AbstractSet`2.op_Subtraction(Imms.Abstract.AbstractSet{`0,`1},System.Collections.Generic.IEnumerable{`0})" />
  <topic id="M:Imms.Abstract.AbstractSet`2.op_Subtraction(Imms.Abstract.AbstractSet{`0,`1},`0)" />
  <topic id="M:Imms.Abstract.AbstractSet`2.RelatesTo(System.Collections.Generic.IEnumerable{`0})" />
  <topic id="M:Imms.Abstract.AbstractSet`2.Remove(`0)" />
  <topic id="M:Imms.Abstract.AbstractSet`2.SetEquals(System.Collections.Generic.IEnumerable{`0})" />
  <topic id="M:Imms.Abstract.AbstractSet`2.Union(System.Collections.Generic.IEnumerable{`0})" />
  <topic id="T:Imms.Abstract.IAnyIterableBuilder`1" />
  <topic id="Methods.T:Imms.Abstract.IAnyIterableBuilder`1" />
  <topic id="Properties.T:Imms.Abstract.IAnyIterableBuilder`1" />
  <topic id="M:Imms.Abstract.IAnyIterableBuilder`1.Add(`0)" />
  <topic id="M:Imms.Abstract.IAnyIterableBuilder`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
  <topic id="P:Imms.Abstract.IAnyIterableBuilder`1.Length" />
  <topic id="T:Imms.Abstract.IAnyMapBuilder`2" />
  <topic id="Methods.T:Imms.Abstract.IAnyMapBuilder`2" />
  <topic id="Properties.T:Imms.Abstract.IAnyMapBuilder`2" />
  <topic id="M:Imms.Abstract.IAnyMapBuilder`2.Remove(`0)" />
  <topic id="M:Imms.Abstract.IAnyMapBuilder`2.TryGetKvp(`0)" />
  <topic id="T:Imms.Abstract.IAnySetBuilder`1" />
  <topic id="Methods.T:Imms.Abstract.IAnySetBuilder`1" />
  <topic id="Properties.T:Imms.Abstract.IAnySetBuilder`1" />
  <topic id="M:Imms.Abstract.IAnySetBuilder`1.Contains(`0)" />
  <topic id="M:Imms.Abstract.IAnySetBuilder`1.Remove(`0)" />
  <topic id="T:Imms.Abstract.IBuilderFactory`1" />
  <topic id="Properties.T:Imms.Abstract.IBuilderFactory`1" />
  <topic id="P:Imms.Abstract.IBuilderFactory`1.EmptyBuilder" />
  <topic id="T:Imms.Abstract.IIterableBuilder`2" />
  <topic id="Methods.T:Imms.Abstract.IIterableBuilder`2" />
  <topic id="Properties.T:Imms.Abstract.IIterableBuilder`2" />
  <topic id="M:Imms.Abstract.IIterableBuilder`2.Produce" />
  <topic id="T:Imms.Abstract.IMapBuilder`3" />
  <topic id="Methods.T:Imms.Abstract.IMapBuilder`3" />
  <topic id="Properties.T:Imms.Abstract.IMapBuilder`3" />
  <topic id="T:Imms.Abstract.ISequentialBuilder`2" />
  <topic id="Methods.T:Imms.Abstract.ISequentialBuilder`2" />
  <topic id="Properties.T:Imms.Abstract.ISequentialBuilder`2" />
  <topic id="T:Imms.Abstract.ISetBuilder`2" />
  <topic id="Methods.T:Imms.Abstract.ISetBuilder`2" />
  <topic id="Properties.T:Imms.Abstract.ISetBuilder`2" />
</topics>