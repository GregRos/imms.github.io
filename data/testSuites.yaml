tests:
  - &Seq-AddLast
    test: Seq-AddLast
    title: AddLast

  - &Seq-AddFirst
    test: Seq-AddFirst
    title: AddFirst

  - &Seq-AddLastRange
    test: Seq-AddLastRange
    title: AddLastRange

  - &Seq-AddFirstRange
    test: Seq-AddFirstRange
    title: AddFirstRange

  - &Seq-RemoveLast
    test: Seq-RemoveLast
    title: RemoveLast

  - &Seq-RemoveFirst
    test: Seq-RemoveFirst
    title: RemoveFirst

  - &Seq-Concat
    test: Seq-Concat
    title: Concat

  - &Seq-Take
    test: Seq-Take
    title: Take

  - &Seq-Skip
    test: Seq-Skip
    title: Skip

  - &Seq-First
    test: Seq-First
    title: First

  - &Seq-Last
    test: Seq-Last
    title: Last

  - &Seq-Insert
    test: Seq-Insert
    title: Insert

  - &Seq-Update
    test: Seq-Update
    title: Update

  - &Seq-Lookup
    test: Seq-Lookup
    title: Lookup

  - &Seq-Remove
    test: Seq-Remove
    title: Remove

  - &Seq-InsertRange
    test: Seq-InsertRange
    title: InsertRange

  - &Seq-InsertConcat
    test: Seq-InsertConcat
    title: InsertConcat

  - &Seq-Slice
    test: Seq-Slice
    title: Slice

  - &IterateN
    test: IterateN

  - &IEnumerator
    test: IEnumerator

  - &Set-Set_Union
    test: Set-Set_Union
    title: Union

  - &Set-Set_Intersection
    test: Set-Set_Intersection
    title: Intersection

  - &Set-Set_Except
    test: Set-Set_Except
    title: Except

  - &Set-Set_Difference
    test: Set-Set_Difference
    title: Difference

  - &Set-Array_Union
    test: Set-Array_Union
    title: Union

  - &Set-Array_Intersection
    test: Set-Array_Intersection
    title: Intersection

  - &Set-Array_Except
    test: Set-Array_Except
    title: Except

  - &Set-Array_Difference
    test: Set-Array_Difference
    title: Difference

  - &Set-Add
    test: Set-Add
    title: Add

  - &Set-Remove
    test: Set-Remove
    title: Remove

  - &Set-Contains
    test: Set-Contains
    title: Contains

  - &Map-Add
    test: Map-Add
    title: Add

  - &Map-Remove
    test: Map-RemoveKey
    title: Remove

  - &Map-Contains
    test: Map-Contains
    title: Contains

  - &Map-Lookup
    test: Map-Lookup
    title: Lookup

  - &Map-AddRange
    test: Map-AddRange
    title: AddRange

  - &Map-RemoveRange
    test: Map-RemoveRange
    title: RemoveRange



   
sequentials:
  long: >
    Benchmarks of sequential collections. Insert more info here.
  footer: |
    Lower is better.
    NaN values mean the collection didn't participate in the benchmark. Extremely low values just mean extremely high performance.
  targets:
    - target: System.ImmutableList
      color: rgb(243, 139, 139)

    - target: ImmList
      color: "#5b67ff"

    - target: ImmVector
      color: "#2935d0"

  groups:
    - group: AddRemoveSingle
      title: Single add, remove
      long: >
        Addition and removal of single elements.
      tests:
        - *Seq-AddLast
        - *Seq-AddFirst
        - *Seq-RemoveLast
        - *Seq-RemoveFirst

    - group: AddRemoveMany
      title: Bulk add, remove
      long: |
        Addition and removal of multiple elements, and subsequences.
        Note that here, one of the variables was the size of the input data set. These results are for a large data set and few iterations.

      tests:
        - *Seq-AddLastRange
        - *Seq-AddFirstRange
        - *Seq-Concat

    - group: Subsequences
      title: Subsequences
      long: |
        Subsequences from the beginning (Take) and end (Skip) of the collection.
      tests:
        - *Seq-Take
        - *Seq-Skip
        - *Seq-Slice

    - group: Lookups
      title: Lookups
      long: >
        Looking up elements at different positions.
      tests:
        - *Seq-First
        - *Seq-Last
        - *Seq-Lookup

    - group: Indexing
      title: Indexing
      long: >
        Addition/removal of one or more elements at an index.
      tests:
        - *Seq-Insert
        - *Seq-Update
        - *Seq-Remove
        - *Seq-InsertRange
        - *Seq-InsertConcat

    - group: Iteration
      title: Iteration
      long: >
        Iteration using different methods.
      tests:
        - *IterateN
        - *IEnumerator

maps:
  long: >
    Benchmarks of map collections.
  footer: |
    Lower is better.
    NaN values mean the collection didn't participate in the benchmark. Extremely low values just mean extremely high performance.
  targets:
    - target: System.ImmutableDict
      color: rgb(243, 139, 139)

    - target: System.ImmutableSortedDict
      color: rgb(243, 120, 120)

    - target: FSharp.Map
      color: "#000"

    - target: ImmMap
      color: "#5b67ff"

    - target: ImmSortedMap
      color: "#2935d0"

  groups:
    - group: Single
      title: Single
      long: >
        Lookup of single elements
      tests:
        - *Map-Contains
        - *Map-Lookup
        - *Map-Add
        - *Map-Remove

    - group: Multiple
      title: Multiple
      long: >
        Operations on multiple elements.
      tests:
        - *Map-AddRange
        - *Map-RemoveRange

sets:
  long: >
    Benchmarks of set collections. Insert more info here.
  footer: |
    Lower is better.
    NaN values mean the collection didn't participate in the benchmark. Extremely low values just mean extremely high performance.
  targets:
    - target: System.ImmutableSet
      color: rgb(243, 139, 139)

    - target: System.ImmutableSortedSet
      color: rgb(243, 120, 120)

    - target: FSharp.Set
      color: "#000"

    - target: ImmSet
      color: "#5b67ff"

    - target: ImmSortedSet
      color: "#2935d0"



  groups:
    - group: AddRemoveSingle
      title: Single add, remove
      long: >
        Addition and removal of single elements.
      tests:
        - *Set-Contains
        - *Set-Add
        - *Set-Remove

    - group: SetOperators
      title: Set Operators (C)
      long: |
        Addition and removal of multiple elements, and subsequences.
        Note that here, one of the variables was the size of the input data set. These results are for a large data set and few iterations.

      tests:
        - *Set-Set_Union
        - *Set-Set_Intersection
        - *Set-Set_Except
        - *Set-Set_Difference

    - group: SetOperatorsSeq
      title: Set Operators (N)
      long: >
        Looking up elements at different positions.
      tests:
        - *Set-Array_Union
        - *Set-Array_Intersection
        - *Set-Array_Except
        - *Set-Array_Difference

    - group: Iteration
      title: Iteration
      long: >
        Iteration using different methods.
      tests:
        - *IterateN
        - *IEnumerator