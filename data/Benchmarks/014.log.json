[
  {
    "Test": "Union_Set",
    "Target": "System.ImmutableSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        30.891335000000005
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "System.ImmutableSet",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic union with another data structure {iters} times.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Intersection_Set",
    "Target": "System.ImmutableSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        9.7271650000000012
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "System.ImmutableSet",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic intersection with another data structure {iters} times.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Except_Set",
    "Target": "System.ImmutableSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        9.983945
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "System.ImmutableSet",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic relative complement (or Except) operation.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Difference_Set",
    "Target": "System.ImmutableSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        61.481280000000005
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "System.ImmutableSet",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic symmetric difference operation.",
    "Class": "SetOperation",
    "Ratio": null
  },
  {
    "Test": "IsProperSubset_Set",
    "Target": "System.ImmutableSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        10.343285
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "System.ImmutableSet",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Determines the Subset relation.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "IsProperSuperset_Set",
    "Target": "System.ImmutableSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.0042250000000000005
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "System.ImmutableSet",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Determines the Superset relation.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Add_Set",
    "Target": "System.ImmutableSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        50.62447
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Contains_Set",
    "Target": "System.ImmutableSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.00065000000000000008
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "Determines if a random element of the set is part of it, {iters} times.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Remove_Set",
    "Target": "System.ImmutableSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.0035750000000000005
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "IEnumerator_Set",
    "Target": "System.ImmutableSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.002375
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "RemoveRange_Set",
    "Target": "System.ImmutableSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        11.058525
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": {
      "Case": "Some",
      "Fields": [
        0.6
      ]
    }
  },
  {
    "Test": "Iterate_Set",
    "Target": "System.ImmutableSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        3.30766
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 1,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Union_Array",
    "Target": "System.ImmutableSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        25.551560000000002
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic union with another data structure {iters} times.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Intersection_Array",
    "Target": "System.ImmutableSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        3.97939
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic intersection with another data structure {iters} times.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Except_Array",
    "Target": "System.ImmutableSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        3.9596250000000004
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic relative complement (or Except) operation.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Difference_Array",
    "Target": "System.ImmutableSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        83.438725
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic symmetric difference operation.",
    "Class": "SetOperation",
    "Ratio": null
  },
  {
    "Test": "IsProperSubset_Array",
    "Target": "System.ImmutableSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        4.5372800000000009
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Determines the Subset relation.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "IsProperSuperset_Array",
    "Target": "System.ImmutableSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.001165
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Determines the Superset relation.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Add_Array",
    "Target": "System.ImmutableSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        51.869575
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Contains_Array",
    "Target": "System.ImmutableSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.00069500000000000009
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "Determines if a random element of the set is part of it, {iters} times.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Remove_Array",
    "Target": "System.ImmutableSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.0038700000000000006
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "IEnumerator_Array",
    "Target": "System.ImmutableSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.0033250000000000003
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "RemoveRange_Array",
    "Target": "System.ImmutableSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        11.257650000000002
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": {
      "Case": "Some",
      "Fields": [
        0.6
      ]
    }
  },
  {
    "Test": "Iterate_Array",
    "Target": "System.ImmutableSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        3.351965
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 1,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Union_Set",
    "Target": "System.ImmutableSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        20.466735
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "System.ImmutableSortedSet",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic union with another data structure {iters} times.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Intersection_Set",
    "Target": "System.ImmutableSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        7.2874000000000008
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "System.ImmutableSortedSet",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic intersection with another data structure {iters} times.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Except_Set",
    "Target": "System.ImmutableSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        13.366175000000002
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "System.ImmutableSortedSet",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic relative complement (or Except) operation.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Difference_Set",
    "Target": "System.ImmutableSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        65.138735000000011
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "System.ImmutableSortedSet",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic symmetric difference operation.",
    "Class": "SetOperation",
    "Ratio": null
  },
  {
    "Test": "IsProperSubset_Set",
    "Target": "System.ImmutableSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        8.57598
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "System.ImmutableSortedSet",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Determines the Subset relation.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "IsProperSuperset_Set",
    "Target": "System.ImmutableSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.00443
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "System.ImmutableSortedSet",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Determines the Superset relation.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Add_Set",
    "Target": "System.ImmutableSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        27.890390000000004
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Contains_Set",
    "Target": "System.ImmutableSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.00051
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "Determines if a random element of the set is part of it, {iters} times.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Remove_Set",
    "Target": "System.ImmutableSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.0018950000000000002
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "IEnumerator_Set",
    "Target": "System.ImmutableSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.00241
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "RemoveRange_Set",
    "Target": "System.ImmutableSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        7.346055
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": {
      "Case": "Some",
      "Fields": [
        0.6
      ]
    }
  },
  {
    "Test": "Iterate_Set",
    "Target": "System.ImmutableSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        1.934345
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 1,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Union_Array",
    "Target": "System.ImmutableSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        15.519810000000001
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic union with another data structure {iters} times.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Intersection_Array",
    "Target": "System.ImmutableSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        4.10423
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic intersection with another data structure {iters} times.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Except_Array",
    "Target": "System.ImmutableSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        9.9096000000000011
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic relative complement (or Except) operation.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Difference_Array",
    "Target": "System.ImmutableSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        70.413525
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic symmetric difference operation.",
    "Class": "SetOperation",
    "Ratio": null
  },
  {
    "Test": "IsProperSubset_Array",
    "Target": "System.ImmutableSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        5.55213
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Determines the Subset relation.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "IsProperSuperset_Array",
    "Target": "System.ImmutableSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.000995
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Determines the Superset relation.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Add_Array",
    "Target": "System.ImmutableSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        27.61277
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Contains_Array",
    "Target": "System.ImmutableSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.00048000000000000007
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "Determines if a random element of the set is part of it, {iters} times.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Remove_Array",
    "Target": "System.ImmutableSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.00202
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "IEnumerator_Array",
    "Target": "System.ImmutableSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.00236
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "RemoveRange_Array",
    "Target": "System.ImmutableSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        7.2582400000000007
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": {
      "Case": "Some",
      "Fields": [
        0.6
      ]
    }
  },
  {
    "Test": "Iterate_Array",
    "Target": "System.ImmutableSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        1.92837
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 1,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Union_Set",
    "Target": "ImmSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        6.94311
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "ImmSet",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic union with another data structure {iters} times.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Intersection_Set",
    "Target": "ImmSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        4.65669
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "ImmSet",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic intersection with another data structure {iters} times.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Except_Set",
    "Target": "ImmSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        5.3120600000000007
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "ImmSet",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic relative complement (or Except) operation.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Difference_Set",
    "Target": "ImmSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        16.695875
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "ImmSet",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic symmetric difference operation.",
    "Class": "SetOperation",
    "Ratio": null
  },
  {
    "Test": "IsProperSubset_Set",
    "Target": "ImmSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.0032150000000000004
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "ImmSet",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Determines the Subset relation.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "IsProperSuperset_Set",
    "Target": "ImmSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.00051
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "ImmSet",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Determines the Superset relation.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Add_Set",
    "Target": "ImmSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        35.285475000000005
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Contains_Set",
    "Target": "ImmSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.000275
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "Determines if a random element of the set is part of it, {iters} times.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Remove_Set",
    "Target": "ImmSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.0014750000000000002
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "IEnumerator_Set",
    "Target": "ImmSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.00202
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "RemoveRange_Set",
    "Target": "ImmSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        5.86886
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": {
      "Case": "Some",
      "Fields": [
        0.6
      ]
    }
  },
  {
    "Test": "Iterate_Set",
    "Target": "ImmSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.26092
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 1,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Union_Array",
    "Target": "ImmSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        14.339005
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic union with another data structure {iters} times.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Intersection_Array",
    "Target": "ImmSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        6.30861
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic intersection with another data structure {iters} times.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Except_Array",
    "Target": "ImmSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        7.902355
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic relative complement (or Except) operation.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Difference_Array",
    "Target": "ImmSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        27.319550000000003
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic symmetric difference operation.",
    "Class": "SetOperation",
    "Ratio": null
  },
  {
    "Test": "IsProperSubset_Array",
    "Target": "ImmSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        9.4348750000000017
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Determines the Subset relation.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "IsProperSuperset_Array",
    "Target": "ImmSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        9.46682
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Determines the Superset relation.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Add_Array",
    "Target": "ImmSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        35.739625000000004
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Contains_Array",
    "Target": "ImmSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.000275
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "Determines if a random element of the set is part of it, {iters} times.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Remove_Array",
    "Target": "ImmSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.0014750000000000002
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "IEnumerator_Array",
    "Target": "ImmSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.001585
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "RemoveRange_Array",
    "Target": "ImmSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        5.8936150000000005
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": {
      "Case": "Some",
      "Fields": [
        0.6
      ]
    }
  },
  {
    "Test": "Iterate_Array",
    "Target": "ImmSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.25827500000000003
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 1,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Union_Set",
    "Target": "ImmSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        1.233315
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "ImmSortedSet",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic union with another data structure {iters} times.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Intersection_Set",
    "Target": "ImmSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        1.068355
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "ImmSortedSet",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic intersection with another data structure {iters} times.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Except_Set",
    "Target": "ImmSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        1.123065
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "ImmSortedSet",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic relative complement (or Except) operation.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Difference_Set",
    "Target": "ImmSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        3.2106100000000004
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "ImmSortedSet",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic symmetric difference operation.",
    "Class": "SetOperation",
    "Ratio": null
  },
  {
    "Test": "IsProperSubset_Set",
    "Target": "ImmSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.0028450000000000003
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "ImmSortedSet",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Determines the Subset relation.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "IsProperSuperset_Set",
    "Target": "ImmSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.00054
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "ImmSortedSet",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Determines the Superset relation.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Add_Set",
    "Target": "ImmSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        20.121675000000003
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Contains_Set",
    "Target": "ImmSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.000275
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "Determines if a random element of the set is part of it, {iters} times.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Remove_Set",
    "Target": "ImmSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.00052500000000000008
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "IEnumerator_Set",
    "Target": "ImmSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.00183
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "RemoveRange_Set",
    "Target": "ImmSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.637735
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": {
      "Case": "Some",
      "Fields": [
        0.6
      ]
    }
  },
  {
    "Test": "Iterate_Set",
    "Target": "ImmSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.03256
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 1,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Union_Array",
    "Target": "ImmSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        1.924035
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic union with another data structure {iters} times.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Intersection_Array",
    "Target": "ImmSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        3.79016
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic intersection with another data structure {iters} times.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Except_Array",
    "Target": "ImmSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        4.456665
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic relative complement (or Except) operation.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Difference_Array",
    "Target": "ImmSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        9.1833800000000014
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic symmetric difference operation.",
    "Class": "SetOperation",
    "Ratio": null
  },
  {
    "Test": "IsProperSubset_Array",
    "Target": "ImmSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        5.89663
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Determines the Subset relation.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "IsProperSuperset_Array",
    "Target": "ImmSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        5.95922
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Determines the Superset relation.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Add_Array",
    "Target": "ImmSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        20.175305
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Contains_Array",
    "Target": "ImmSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.00023
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "Determines if a random element of the set is part of it, {iters} times.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Remove_Array",
    "Target": "ImmSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.00052500000000000008
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "IEnumerator_Array",
    "Target": "ImmSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.00146
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "RemoveRange_Array",
    "Target": "ImmSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.62357000000000007
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": {
      "Case": "Some",
      "Fields": [
        0.6
      ]
    }
  },
  {
    "Test": "Iterate_Array",
    "Target": "ImmSortedSet",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.031270000000000006
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 1,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Union_Set",
    "Target": "FSharp.Set",
    "Time": {
      "Case": "Time",
      "Fields": [
        9.5118350000000014
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "FSharp.Set",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic union with another data structure {iters} times.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Intersection_Set",
    "Target": "FSharp.Set",
    "Time": {
      "Case": "Time",
      "Fields": [
        3.4449400000000003
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "FSharp.Set",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic intersection with another data structure {iters} times.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Except_Set",
    "Target": "FSharp.Set",
    "Time": {
      "Case": "Time",
      "Fields": [
        21.291625000000003
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "FSharp.Set",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic relative complement (or Except) operation.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Difference_Set",
    "Target": "FSharp.Set",
    "Time": {
      "Case": "Time",
      "Fields": [
        55.093655
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "FSharp.Set",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic symmetric difference operation.",
    "Class": "SetOperation",
    "Ratio": null
  },
  {
    "Test": "IsProperSubset_Set",
    "Target": "FSharp.Set",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.00129
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "FSharp.Set",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Determines the Subset relation.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "IsProperSuperset_Set",
    "Target": "FSharp.Set",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.000665
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "FSharp.Set",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Determines the Superset relation.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Add_Set",
    "Target": "FSharp.Set",
    "Time": {
      "Case": "Time",
      "Fields": [
        27.32513
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Contains_Set",
    "Target": "FSharp.Set",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.00038500000000000003
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "Determines if a random element of the set is part of it, {iters} times.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Remove_Set",
    "Target": "FSharp.Set",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.0018950000000000002
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "IEnumerator_Set",
    "Target": "FSharp.Set",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.001255
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "RemoveRange_Set",
    "Target": "FSharp.Set",
    "Time": {
      "Case": "Time",
      "Fields": [
        12.525580000000001
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": {
      "Case": "Some",
      "Fields": [
        0.6
      ]
    }
  },
  {
    "Test": "Iterate_Set",
    "Target": "FSharp.Set",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.60009
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 1,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Union_Array",
    "Target": "FSharp.Set",
    "Time": {
      "Case": "Time",
      "Fields": [
        32.944285
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic union with another data structure {iters} times.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Intersection_Array",
    "Target": "FSharp.Set",
    "Time": {
      "Case": "Time",
      "Fields": [
        24.76854
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic intersection with another data structure {iters} times.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Except_Array",
    "Target": "FSharp.Set",
    "Time": {
      "Case": "Time",
      "Fields": [
        43.438535
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic relative complement (or Except) operation.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Difference_Array",
    "Target": "FSharp.Set",
    "Time": {
      "Case": "Time",
      "Fields": [
        77.500045
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Computes the set-theoretic symmetric difference operation.",
    "Class": "SetOperation",
    "Ratio": null
  },
  {
    "Test": "IsProperSubset_Array",
    "Target": "FSharp.Set",
    "Time": {
      "Case": "Time",
      "Fields": [
        20.94821
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Determines the Subset relation.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "IsProperSuperset_Array",
    "Target": "FSharp.Set",
    "Time": {
      "Case": "Time",
      "Fields": [
        21.07689
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "Determines the Superset relation.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Add_Array",
    "Target": "FSharp.Set",
    "Time": {
      "Case": "Time",
      "Fields": [
        27.211955
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 10000,
    "DataSource_Type": "Array",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Contains_Array",
    "Target": "FSharp.Set",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.00043500000000000006
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "Determines if a random element of the set is part of it, {iters} times.",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "Remove_Array",
    "Target": "FSharp.Set",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.0018800000000000002
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "IEnumerator_Array",
    "Target": "FSharp.Set",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.001225
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": null
  },
  {
    "Test": "RemoveRange_Array",
    "Target": "FSharp.Set",
    "Time": {
      "Case": "Time",
      "Fields": [
        13.032930000000002
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 2,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": {
      "Case": "Some",
      "Fields": [
        0.6
      ]
    }
  },
  {
    "Test": "Iterate_Array",
    "Target": "FSharp.Set",
    "Time": {
      "Case": "Time",
      "Fields": [
        0.71538
      ]
    },
    "Target_InitialSize": 10000,
    "Iterations": 1,
    "DataSource_Size": 0,
    "DataSource_Type": "",
    "Target_InitialGenerator": "[Name = \"Integers by Length\"; ElementType = System.Int32; Range = (2, 8388608)]",
    "DataGenerator": "",
    "Description": "",
    "Class": "",
    "Ratio": null
  }
]